[{"path":"index.html","id":"welcome","chapter":"Hello and welcome!","heading":"Hello and welcome!","text":"… latest iteration introductory R course, learn analyse data style.Current course dates\nWS21/22\n21.10.21 – 09.12.21\nLecture online time\nSeminar weekly Fridays 9:15 – 10:45\nSign-(Heidelberg University): see discord\nLanguage: Lectures English seminar can German choose \n(case can always ask questions German well).Warning: site still development, restructuring lectures improve learning experience.curious ahead time style teaching topics covered, check website previous year : https://jmbuhr.de/dataIntro20/course, handle different kinds data, create pretty insightful visualizations, compute different statistics data also explore statistical concepts mean.\npenguins p-values, got covered.\nFigure 0.1: One plots creating first lecture.\n","code":""},{"path":"index.html","id":"prerequisits","chapter":"Hello and welcome!","heading":"0.1 Prerequisits","text":"prior knowledge necessary.Software install:RRstudio","code":""},{"path":"index.html","id":"structure-of-the-course","chapter":"Hello and welcome!","heading":"0.2 Structure of the course","text":"current course WS21/22 Heidelberg University.\nparticipants biochemistry bachelor (master) students,\nmaterial open anyone!8 lectures total, accompanied :\nvideo lecture top page\nlecture script, consists code written lecture\n(plus code generate illustrative graphics) explanations\nExercises complete send \nseminar discuss exercises\ndiscord server ask questions share solutions\nvideo lecture top pageThe lecture script, consists code written lecture\n(plus code generate illustrative graphics) explanationsExercises complete send inA seminar discuss exercisesA discord server ask questions share solutionsI recommend watch lecture time, use lecture script afterwards look concepts code want revisit.\nCode chunks also copy-button, helpful quickly playing around , make sure actually walk lecture typing first,\nmuscle memory server well future.","code":""},{"path":"index.html","id":"exe","chapter":"Hello and welcome!","heading":"0.2.1 Exercises","text":"complete course, hand least 5 8 exercises.\nimportant part exercise perfect solution,\nencounter questions struggles attempt exercise, make sure include pain points well can cover Seminar.\nPlease hand solutions seminar via direct message discord.\nearlier week submit solutions,\ntime prepare answers seminar.","code":""},{"path":"index.html","id":"seminar","chapter":"Hello and welcome!","heading":"0.2.2 Seminar","text":"week, meet discuss exercises answer questions might popped .\nCurrently looks like possible person, case meet :Mathematikon (INF 205), IWR CIP-Pool 3. OGEven though technically computer rooms, great bring laptop can code along known able apply learned course well.\nAlso, might able install necessary software computer room.","code":""},{"path":"index.html","id":"discord","chapter":"Hello and welcome!","heading":"0.2.3 Discord and signup","text":"biochemistry student Heidelberg University,\nclick link: https://discord.gg/jVZcNPCrp7 join discord server sign course.\n, please send message full name matriculation number course can make ’s way official transcript records.\nlink doesn’t work, please send message via contact formOnce sure drop message name name matriculation number can put course onto official transcript records.\nserver, able ask questions can answered fellow learners, hand exercises receive feedback.Discord good choice , messages support code formatting can easily open voice call question get complicated.","code":""},{"path":"intro.html","id":"intro","chapter":"Lesson 1 Introduction","heading":"Lesson 1 Introduction","text":"Hi ! material first lecture appear.\nsign , check welcome page… get started R RStudio,\nlearn literate programming build first\nplot discovering Grammar Graphics.","code":""},{"path":"intro.html","id":"what-you-will-learn","chapter":"Lesson 1 Introduction","heading":"1.1 What You will Learn","text":"Throughout scientific career — potentially outside — encounter various forms data. Maybe experiment measured fluorescence molecular probe, simply count penguins local zoo. Everything data form another. raw numbers without context meaningless tables numbers boring look , often hide actual structure data.course learn handle different kinds data. learn create pretty insightful visualizations, compute different statistics data also statistical concepts mean. penguins p-values, got covered.course held English, concepts covered directly transfer research , working language English. said, feel free ask questions language understand, German also fine. Latin little rusty, thought.course, using programming language R. R language particularly well suited data analysis, initially designed statisticians interactive nature language, makes easier get started. don’t fret first encounter programming, take one step time.datasets chosen illustrate various concepts tools particularly centered around Biology. Rather, chose general datasets require less introduction enable us focus learning R statistics. talking penguins, racing games life expectancy instead intricate molecular measurements.","code":""},{"path":"intro.html","id":"execute-r-code","chapter":"Lesson 1 Introduction","heading":"1.2 Execute R Code","text":"consolescripta script like recipe, keeping important keeping e.g.\nplots come !can now execute commands R console bottom left. example can calculate mathematical expression:generate numbers one 10:rarely type directly console. want results reproducible, write code script first, next person 1 can see replicate analysis. see reproducibility quite near dear , pop twice. scientists, sure understand importance.script like recipe. important part data analysis\nworkflow, long recipe, can recreate whatever\nproducts (e.g. plots, statistics, tables) ease.create new script, click little button top left corner. script can type regular R code, won’t get executed straight away. send line code console executed, hit Ctrl+Enter. Go ahead, try :","code":"\n1 + 1## [1] 2\n1:10##  [1]  1  2  3  4  5  6  7  8  9 10"},{"path":"intro.html","id":"get-to-know-rstudio","chapter":"Lesson 1 Introduction","heading":"1.3 Get to know RStudio","text":"projectspanes / layoutimportant settings:\nnever restore .Rdata startup\nnever restore .Rdata startuptheme (via packages,\ntalk later today)get deeper R,\nlet’s talk little bit Home working R:\nRStudio.one important setting like change:\nTools -> Global Options make sure “Restore .RData workspace startup”\nunchecked.\nworkspace RStudio save .RData contains objects created session, , can see Environment pane (default top right panel, bottom right setup). want load objects created last session current session automatically? reason reproducibility. want make sure everything analysis needs script. creates variables plots raw data sole source truth.Check lecture video customization RStudio\ne.g. themes make sure also use RStudio Projects structure work.","code":""},{"path":"intro.html","id":"expressions-tell-r-to-do-things","chapter":"Lesson 1 Introduction","heading":"1.4 Expressions: Tell R to do things","text":"R can lot’s things, let’s start basics, like calculating.\nEverything starts # comment ignored R.Create vectors : operator, e.g. numbers :toAnd mathematical operations automatically “vectorized”:fact, R scalars (individual values), just vectors length 1.","code":"\n1 + 1 # addition## [1] 2\n32 / 11 # division## [1] 2.909091\n3 * 4 # multiplication## [1] 12\n13 %% 5 # modulo## [1] 3\n13 %/% 5 # integer division## [1] 2\n1:4## [1] 1 2 3 4\n1:3 + 1:3## [1] 2 4 6"},{"path":"intro.html","id":"variables-boxes-for-things","chapter":"Lesson 1 Introduction","heading":"1.5 Variables: Boxes for things","text":"Often, want store result computation reuse, give sensible name make code readable.\nvariables . can assign value variable using assignment operator <- (RStudio, shortcut : Alt+Minus):Executing code give output, use name variable, can see content.can operations variables:NOTE careful order execution! R enables work interactively execute code write script order Ctrl+Enter, execute (=“source”) whole script, executed top bottom.Furthermore, code executed automatically, change dependency expression later . second assignment x doesn’t change y.Variable names can contain letters (capitalization matters), numbers (first character) underscores _. 2A depiction various naming styles Allison Horst3A good convention always use snake_case.","code":"\nmy_number <- 42\nmy_number## [1] 42\nx <- 41\ny <- 1\nx + y## [1] 42\nx <- 1\ny <- x + 1\nx <- 1000\ny## [1] 2\n# snake_case\nmain_character_name <- \"Kvothe\"\n\n# or camelCase\nbookTitle <- \"The Name of the Wind\"\n\n# you can have numbers in the name\nx1 <- 12"},{"path":"intro.html","id":"atomic-datatype","chapter":"Lesson 1 Introduction","heading":"1.6 Atomic datatype","text":"First numbers (internally called numeric double), whole numbers (integer)well rarely used complex numbers (complex)Text data however used often (character, string).\nEverything enclosed quotation marks treated text.\nDouble single quotation marks fine.Logical values can contain yes , rather TRUE FALSE programming terms (boolean, logical).special types mix type. Like NULL value NA Assigned.NA contagious. computation involving NA return NA (R way knowing answer):functions can remove NAs giving us answer:can ask datatype object function typeof:also concept called factors (factor) categorical data, talk later, get deeper vectors.","code":"\n12\n12.5\n1L # denoted by L\n1 + 3i # denoted by the small i for the imaginary part\n\"It was night again.\"\n'This is also text'\nTRUE\nFALSE\nNULL\nNA\nNA + 1## [1] NA\nmax(NA, 12, 1)## [1] NA\nmax(NA, 12, 1, na.rm = TRUE)## [1] 12\ntypeof(\"hello\")## [1] \"character\""},{"path":"intro.html","id":"functions-calculate-run-and-automate-things","chapter":"Lesson 1 Introduction","heading":"1.7 Functions: Calculate, run and automate things","text":"R, everything exists object, everything something function.Functions main workhorse data analysis. example, mathematical functions, like sin, cos etc.Functions take arguments (sometimes called parameters) sometimes also return things. sin function takes just one argument x returns sine. returned value us. can use directly another computation store variable. don’t anything return value, R simply prints console.Note, = inside function parenthesis gives x = 0 function separate x defined outside function. example:learn function R, execute ? function name press F1 mouse function. actually one important things learn today, help pages can … well… incredibly helpful.can pass arguments name order appearance. following two expressions equivalent.notable functions start :Combine elements vector:Convert datatypes :Calculate summary value vectore:Create sequences numbers:just learned functions sin, seq max. wait, ! sense functions R (kind language two verbs?!), also powerful way:can define functions!syntax (\\(\\leftarrow\\) grammar programming languages) follows.function ends reaches return keyword. also ends reaches end function body implicitly returns last expression. written bit shorter fact often see people omitting explicit return end:can call freshly defined function:Got error like Error add(23, 19) : find function \"add\"? Check fact execute code defines function (.e. put cursor line function keyword hit Ctrl+Enter.).","code":"\nsin(x = 0)## [1] 0\nx <- 10\ncos(x = 0)## [1] 1\n# x outside of the function is still 10\nx## [1] 10\n?sin\nsin(x = 12)\nsin(12)\nc(1, 3, 5, 31)## [1]  1  3  5 31\nas.numeric(\"1\")## [1] 1\nas.character(1)## [1] \"1\"\nx <- c(1, 3, 5, 42)\nmax(x)## [1] 42\nmin(x)## [1] 1\nmean(x)## [1] 12.75\nrange(x)## [1]  1 42\nseq(1, 10, by = 2)## [1] 1 3 5 7 9\nname_for_the_function <- function(parameter1, parameter2, ...) { # etc.\n  # body of the function\n  # things happen\n  result <- parameter1 + parameter2\n  # Something the function should return to the caller\n  return(result)\n}\nadd <- function(x, y) {\n  x + y\n}\nadd(23, 19)## [1] 42"},{"path":"intro.html","id":"packages-sharing-functions","chapter":"Lesson 1 Introduction","heading":"1.8 Packages: Sharing functions","text":"one using R.\nwelcoming helpful community .\npeople also write bunch functions put together called package.\npeople even went step .\ntidyverse collection packages play well together also iron quirkier ways R works.4\nprovide consistent interface enable us learn less special cases.\nR function install.packages(\"<package_name_here>\") installs packages CRAN curated set R packages.R packages, especially ones using, often come\ngreat manuals help pages added link\npackage website \npackages hexagonal icons package script,\nmake sure click icons.don’t link hand can also always find\nhelp internet.\npackages publish source code site\ncalled GitHub, able find\nlinks, help documentation searching\nr  github.\nSometimes can helpful write R’s full name\nsearching (turns lot thing \nletter R): rstats.","code":""},{"path":"intro.html","id":"literate-programming-with-rmarkdown-code-is-communication","chapter":"Lesson 1 Introduction","heading":"1.9 Literate Programming with Rmarkdown: Code is communication","text":"first package like install called Rmarkdown.\nGo ahead install :one exception effort everything script just console. don’t want R trying install package every time run script, needs happen . can either turn comment, delete script, type console. can also use RStudio’s built-panel package installation.Rmarkdown enables us, combine text code produce range output formats like pdf, html, word documents, presentations etc. fact, whole website, including slides, created Rmarkdown. Sounds exciting? Let’s dive !Open new Rmarkdown document file extension .Rmd New File menu top left corner RStudio: File → New File → R Markdown choose html output format. particularly like html, don’t worry page breaks easily works screens different sizes, like phone.Rmarkdown document consists three things:Metadata:\nInformation document author date format called YAML. YAML header starts ends three minus signs ---.Text:\nRegular text interpreted markdown, meaning supports things like creating headings prefixing line #, text bold output surrounding **.Code chunks:\nStarting ```{r} ending ``` (backticks). interpreted R code. write code like .R script file. can insert new chunks button top right editor window use shortcut Ctrl+Alt+.Use document thoughts alongside code data analysis. Future (reviewer number 2) happy! run code inside chunks, use,little play button chunk, tried true Ctrl+Enter run one line, Ctrl+Shift+Enter run whole chunk. chunks can large small want, try maintain sensible structure.lecture video also demonstrates different output formats,\nexercises using html_document.knitshow output formats\nhtml_document\npdf_document\ndocx_document\nhtml_documentpdf_documentdocx_documentshow visual editorCute little monsters Rmarkdown Wizards Allison Horst","code":"\ninstall.packages(\"rmarkdown\")"},{"path":"intro.html","id":"the-tidyverse","chapter":"Lesson 1 Introduction","heading":"1.9.1 The Tidyverse","text":"Go ahead install tidyverse packages ","code":"\ninstall.packages(\"tidyverse\")"},{"path":"intro.html","id":"our-first-dataset-the-palmer-penguins","chapter":"Lesson 1 Introduction","heading":"1.10 Our First Dataset: The Palmer Penguins","text":"three penguin species Palmer Archipelago, Allison HorstSo let’s explore first dataset together fresh Rmarkdown document. setup chunk special. gets executed automatically chunk document run. makes good place load packages. dataset working today actually comes package, need install well (Yes, lot installing today, ):populate setup chunk withThis gives us penguins dataset:5","code":"\ninstall.packages(\"palmerpenguins\")\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npenguins## # A tibble: 344 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # … with 334 more rows, and 2 more variables: sex <fct>, year <int>"},{"path":"intro.html","id":"dataframes-rs-powerfull-tables","chapter":"Lesson 1 Introduction","heading":"1.10.1 Dataframes: R’s powerfull tables","text":"Let’s talk shape penguins object. str function reveals structure object us.penguins variable contains tibble, tidyverse\nversion dataframe.\nbehaves way prints nicer.\nlist columns, columns (usually) vectors.","code":"\nstr(penguins)## tibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n##  $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n##  $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n##  $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n##  $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n##  $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n##  $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n##  $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n##  $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ..."},{"path":"intro.html","id":"the-grammar-of-graphics-translate-data-into-visualizations","chapter":"Lesson 1 Introduction","heading":"1.11 The Grammar of Graphics: Translate data into visualizations","text":"probably took course want build cool visualizations data. order , let us talk can describe visualizations. Just like language grammar, smart people came grammar graphics,6 slightly modified turned R package can talk also create visualizations using grammar.7\npackage called ggplot2, already loaded included tidyverse. looking code, can describe need order create graphic.grammar means:\n- can build complex visualizations\nbasic building blocks\nfit together according \nrules (grammar)\n- just like lego bricks\n- just learn building blocks \ndifferent function \ndifferent types plots\n(e.g. barplot, scatterplot, lineplot,\npiechart)can build plot step step. data foundation plot, just gives us empty plotting canvas. assigning individual steps going variable, can sequentially add elements, can one step shown ., add aesthetic mapping plot. creates relation features dataset (like flipper length penguin) visual property, like position x-axis, color shape.Still, plot empty, coordinate system certain scale. geometric objects represent aesthetics. Elements plot added using + operator geometric elements ggplot knows start geom_. Let’s add points:Look help page geom_point find aesthetics understands. exact way features mapped aesthetics regulated scales starting scale_ name aesthetic:can add change labels (like x-axis-label) adding labs function.overall look plot regulated themes like pre-made theme_ functions finely regulated theme() function, uses element functions create look individual elements. Autocomplete helps us lot (Ctrl+Space).summary, plot needs:dataaesthetic mappinggeom(s)(stat(s))coordinate systemguidesscalesthemeWe can save plot ggsave function.\nalso arguments control dimentions resolution\nimage.Next week get rid annoying NA legend sex.","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %>%\n  ggplot(aes(flipper_length_mm, bill_length_mm,\n             color = species,\n             shape = sex)) +\n  geom_point(size = 2.5) +\n  geom_smooth(aes(group = species), method = \"lm\", se = FALSE,\n              show.legend = FALSE) +\n  labs(x = \"Flipper length [mm]\",\n       y = \"Bill length [mm]\",\n       title = \"Penguins!\",\n       subtitle = \"The 3 penguin species can be differentiated by their flipper- and bill-lengths.\",\n       caption = \"Datasource:\\nHorst AM, Hill AP, Gorman KB (2020). palmerpenguins:\\nPalmer Archipelago (Antarctica) penguin data.\\nR package version 0.1.0. https://allisonhorst.github.io/palmerpenguins/\",\n       color = \"Species\",\n       shape = \"Sex\") +\n  theme_minimal() +\n  scale_color_brewer(type = \"qual\") +\n  theme(plot.caption = element_text(hjust = 0))\nplt <- ggplot(penguins)\n\nplt\nplt <- ggplot(penguins,\n              aes(x = flipper_length_mm,\n                  y = bill_length_mm,\n                  color = species,\n                  shape = sex))\n\nplt\nplt <- plt +\n  geom_point()\n\nplt\nplt <- plt +\n  scale_color_manual(values = c(\"red\", \"blue\", \"orange\"))\n\nplt\nplt <- plt +\n    labs(x = \"Flipper length [mm]\",\n         y = \"Bill length [mm]\",\n         title = \"Penguins!\",\n         subtitle = \"The 3 penguin species can differentiated by their flipper and bill lengths\")\nplt <- plt + \n  theme_minimal() +\n  theme(legend.text = element_text(face = \"bold\"))\n\nplt\ntheme_set(theme_minimal())\n\nmy_plot <- ggplot(penguins,\n                  aes(x = flipper_length_mm,\n                      y = bill_length_mm,\n                      shape = sex,\n                      color = species)) +\n  geom_point() +\n  scale_color_manual(values = c(\"red\", \"blue\", \"orange\")) +\n  labs(title = \"Penguins\") +\n  theme(plot.title = element_text(colour = \"purple\"))\n\nmy_plot \nggsave(\"my_plot.png\", my_plot)"},{"path":"intro.html","id":"the-community-there-to-catch-you.","chapter":"Lesson 1 Introduction","heading":"1.12 The Community: There to catch You.","text":"Comunity Teamwork Allison HorstGoogling Error Message","code":""},{"path":"intro.html","id":"bonus-get-more-rstudio-themes","chapter":"Lesson 1 Introduction","heading":"1.13 Bonus: Get more RStudio themes","text":"talk packages come fromhttps://github.com/gadenbuie/rsthemes","code":""},{"path":"intro.html","id":"exercises","chapter":"Lesson 1 Introduction","heading":"1.14 Exercises","text":"course graded, need way confirming indeed take part course. order get confirmation, send solutions minimum 5 8 exercises Seminar Fridays. week like create fresh Rmarkdown document solutions code well questions arose lecture. help lot improving course.done solving exercises, hit knit button (top editor panel) send resulting html document via discord (confirm looks way expected beforehand).today’s tasks:","code":""},{"path":"intro.html","id":"put-your-flippers-in-the-air","chapter":"Lesson 1 Introduction","heading":"1.14.1 Put your flippers in the air!","text":"fresh Rmarkdown document (without example template content),\nload tidyverse palmerpenguins packages.Write section text previous experience data analysis /programming (optional, can use information customize course).Produce scatterplot (meaning plot points) bill length vs. bill depth, colorcoded species.\nImaginary bonus points manage use colors penguin-image (hint: look help page scale_color_manual() find . Note, R can work ’s built-color names, rgb() specifications hex-codes #1573c7). Even bonus points also look theme() function ’s arguments, theme_<...>() functions make plot prettier.\nImaginary bonus points manage use colors penguin-image (hint: look help page scale_color_manual() find . Note, R can work ’s built-color names, rgb() specifications hex-codes #1573c7). Even bonus points also look theme() function ’s arguments, theme_<...>() functions make plot prettier.Create vector odd numbers 1 99 store variable.\nCreate second variable contains squares first.\nStore variables named list turn list tibble (enhanced version data.frame\nDiscover shortcut three steps using function tibble. Specifically, look third bullet point description ?tibble::tibble (two colons :: specify package function coming . need tibble(...) code tibble package loaded automatically tidyverse. , specify directly send correct help page).\nCreate scatterplot two variables stored tibble using ggplot.\ngeom_ function need add plot add line connects points?\nCreate second variable contains squares first.Store variables named list turn list tibble (enhanced version data.frameDiscover shortcut three steps using function tibble. Specifically, look third bullet point description ?tibble::tibble (two colons :: specify package function coming . need tibble(...) code tibble package loaded automatically tidyverse. , specify directly send correct help page).Create scatterplot two variables stored tibble using ggplot.geom_ function need add plot add line connects points?Check metadata (YAML) Rmarkdown document make sure contains name author: .\ncouple YAML options can try feel adventurous.\ncouple YAML options can try feel adventurous.Knit ship !","code":""},{"path":"intro.html","id":"learn-more","chapter":"Lesson 1 Introduction","heading":"1.15 Learn more:","text":"Check dedicated Resources page.","code":""},{"path":"data-wrangling.html","id":"data-wrangling","chapter":"Lesson 2 Data Wrangling","heading":"Lesson 2 Data Wrangling","text":"… explore typical data analysis workflow tidyverse, wrangle different kinds data learn factors.Note:\ntry vocal code plain English type learning “translations” symbols keywords can help , . , programming can feel lot like conversation digital assistant helpful friend. boundary human languages computer languages blurry might think.loading packages firstloading packages firstCtrl+Alt+ICtrl+Alt+","code":"\nlibrary(tidyverse)"},{"path":"data-wrangling.html","id":"a-data-analysis-workflow","chapter":"Lesson 2 Data Wrangling","heading":"2.1 A Data Analysis Workflow","text":"Figure Hadley Wickham Garrett Grolemund8.","code":""},{"path":"data-wrangling.html","id":"reading-data-with-readr","chapter":"Lesson 2 Data Wrangling","heading":"2.2 Reading Data with readr","text":" download data todayshow folder structureshowing raw datadownload.file (make sure data folder exists)show tab / ctrl+space autocompletionread gapminder data (csv)read csv also works url\nprobably also want local copy\nwrite_csv friends\nprobably also want local copywrite_csv friendsView ctrl+click","code":"\nread_csv(\"data/02/gapminder.csv\")\ndownload.file(\"https://raw.githubusercontent.com/jmbuhr/dataintro/main/data/02/gapminder.csv\", \"example-download.csv\")\nour_data <- read_csv(\"https://raw.githubusercontent.com/jmbuhr/dataintro/main/data/02/gapminder.csv\")\n\nwrite_csv(our_data, \"our-data.csv\")"},{"path":"data-wrangling.html","id":"a-project-based-workflow","chapter":"Lesson 2 Data Wrangling","heading":"2.3 A Project-based Workflow","text":"project based workflowgetwdwhy use setwdwhat file-paths\nabsolute\nrelative\nabsoluterelativeThe gapminder dataset9 excerpt gapminder project contains life expectancy birth 142 countries 5 year intervals 1952 2007. also contains population Gross Domestic Product (GDP) per Inhabitant. built visualization later .","code":"\ngetwd()## [1] \"/home/jannik/Documents/projects/teaching/dataintro\"\n# read_csv(\"/home/jannik/Documents/projects/teaching/dataintro/data/02/gapminder.csv\")\nread_csv(\"./data/02/gapminder.csv\")## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 1,694 more rows\n# setwd()\ngapminder <- read_csv(\"data/02/gapminder.csv\")\ngapminder## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 1,694 more rows\nView(gapminder)\ngapminder\n# read.csv()"},{"path":"data-wrangling.html","id":"common-hurdles-when-importing-data","chapter":"Lesson 2 Data Wrangling","heading":"2.3.1 Common Hurdles when Importing Data","text":"csv vs csv2read_lines \n_tsv, obscure_file\n_tsv, obscure_fileread_delim_messierwhat parsing?excel files?\nnote :: library\nnote :: library","code":"\nread_csv2(\"data/02/gapminder_csv2.csv\")## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 1,694 more rows\nread_lines(\"data/02/gapminder_tsv.txt\", n_max = 3)## [1] \"country\\tcontinent\\tyear\\tlifeExp\\tpop\\tgdpPercap\"    \n## [2] \"Afghanistan\\tAsia\\t1952\\t28.801\\t8425333\\t779.4453145\"\n## [3] \"Afghanistan\\tAsia\\t1957\\t30.332\\t9240934\\t820.8530296\"\n# read_tsv()\nread_delim(\"data/02/obscure_file.tsv\", \"~\")## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 1,694 more rows\nread_lines(\"data/02/gapminder_messier.csv\", n_max = 5)## [1] \"# Some comment about the data\"                   \n## [2] \"And maybe a personal note\"                       \n## [3] \"country,continent,year,lifeExp,pop,gdpPercap\"    \n## [4] \"Afghanistan,Asia,1952,28.801,8425333,779.4453145\"\n## [5] \"Afghanistan,Asia,1957,30.332,9240934,820.8530296\"\nread_csv(\"data/02/gapminder_messier.csv\", skip = 2)## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 1,694 more rows\nreadxl::read_xlsx(\"data/02/gapminder.xlsx\")## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 1,694 more rows"},{"path":"data-wrangling.html","id":"wrangling-data-with-dplyr","chapter":"Lesson 2 Data Wrangling","heading":"2.4 Wrangling Data with dplyr","text":" Let’s go data wrangling! Artwork Allison Horst","code":""},{"path":"data-wrangling.html","id":"select","chapter":"Lesson 2 Data Wrangling","heading":"2.4.1 select","text":"…column names, : , starts_with, see select_helpers, c(…)","code":"\nselect(gapminder, country, year, gdpPercap)## # A tibble: 1,704 × 3\n##    country      year gdpPercap\n##    <chr>       <dbl>     <dbl>\n##  1 Afghanistan  1952      779.\n##  2 Afghanistan  1957      821.\n##  3 Afghanistan  1962      853.\n##  4 Afghanistan  1967      836.\n##  5 Afghanistan  1972      740.\n##  6 Afghanistan  1977      786.\n##  7 Afghanistan  1982      978.\n##  8 Afghanistan  1987      852.\n##  9 Afghanistan  1992      649.\n## 10 Afghanistan  1997      635.\n## # … with 1,694 more rows\nselect(gapminder, year:pop)## # A tibble: 1,704 × 3\n##     year lifeExp      pop\n##    <dbl>   <dbl>    <dbl>\n##  1  1952    28.8  8425333\n##  2  1957    30.3  9240934\n##  3  1962    32.0 10267083\n##  4  1967    34.0 11537966\n##  5  1972    36.1 13079460\n##  6  1977    38.4 14880372\n##  7  1982    39.9 12881816\n##  8  1987    40.8 13867957\n##  9  1992    41.7 16317921\n## 10  1997    41.8 22227415\n## # … with 1,694 more rows\nselect(gapminder, starts_with(\"co\"))## # A tibble: 1,704 × 2\n##    country     continent\n##    <chr>       <chr>    \n##  1 Afghanistan Asia     \n##  2 Afghanistan Asia     \n##  3 Afghanistan Asia     \n##  4 Afghanistan Asia     \n##  5 Afghanistan Asia     \n##  6 Afghanistan Asia     \n##  7 Afghanistan Asia     \n##  8 Afghanistan Asia     \n##  9 Afghanistan Asia     \n## 10 Afghanistan Asia     \n## # … with 1,694 more rows\nselect(gapminder, where(is.numeric))## # A tibble: 1,704 × 4\n##     year lifeExp      pop gdpPercap\n##    <dbl>   <dbl>    <dbl>     <dbl>\n##  1  1952    28.8  8425333      779.\n##  2  1957    30.3  9240934      821.\n##  3  1962    32.0 10267083      853.\n##  4  1967    34.0 11537966      836.\n##  5  1972    36.1 13079460      740.\n##  6  1977    38.4 14880372      786.\n##  7  1982    39.9 12881816      978.\n##  8  1987    40.8 13867957      852.\n##  9  1992    41.7 16317921      649.\n## 10  1997    41.8 22227415      635.\n## # … with 1,694 more rows\nselect(gapminder, where(is.character))## # A tibble: 1,704 × 2\n##    country     continent\n##    <chr>       <chr>    \n##  1 Afghanistan Asia     \n##  2 Afghanistan Asia     \n##  3 Afghanistan Asia     \n##  4 Afghanistan Asia     \n##  5 Afghanistan Asia     \n##  6 Afghanistan Asia     \n##  7 Afghanistan Asia     \n##  8 Afghanistan Asia     \n##  9 Afghanistan Asia     \n## 10 Afghanistan Asia     \n## # … with 1,694 more rows"},{"path":"data-wrangling.html","id":"filter","chapter":"Lesson 2 Data Wrangling","heading":"2.4.2 filter","text":"Filter data. Artwork Allison Horstconditions e.g. year, country","code":"\nfilter(gapminder, year > 2000, country == \"New Zealand\")## # A tibble: 2 × 6\n##   country     continent  year lifeExp     pop gdpPercap\n##   <chr>       <chr>     <dbl>   <dbl>   <dbl>     <dbl>\n## 1 New Zealand Oceania    2002    79.1 3908037    23190.\n## 2 New Zealand Oceania    2007    80.2 4115771    25185.\nfilter(gapminder, year > 2000, str_to_lower(country) == \"new zealand\")## # A tibble: 2 × 6\n##   country     continent  year lifeExp     pop gdpPercap\n##   <chr>       <chr>     <dbl>   <dbl>   <dbl>     <dbl>\n## 1 New Zealand Oceania    2002    79.1 3908037    23190.\n## 2 New Zealand Oceania    2007    80.2 4115771    25185.\nfilter(gapminder, country == \"New Zealand\" | country == \"Afghanistan\")## # A tibble: 24 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 14 more rows\nfilter(gapminder, country %in% c(\"New Zealand\", \"Afghanistan\"))## # A tibble: 24 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 14 more rows"},{"path":"data-wrangling.html","id":"mutate","chapter":"Lesson 2 Data Wrangling","heading":"2.4.3 mutate","text":"calculate gdpnote assignment","code":"\nmutate(gapminder, gdp = pop * gdpPercap)## # A tibble: 1,704 × 7\n##    country     continent  year lifeExp      pop gdpPercap          gdp\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>        <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.  6567086330.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.  7585448670.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.  8758855797.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.  9648014150.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.  9678553274.\n##  6 Afghanistan Asia       1977    38.4 14880372      786. 11697659231.\n##  7 Afghanistan Asia       1982    39.9 12881816      978. 12598563401.\n##  8 Afghanistan Asia       1987    40.8 13867957      852. 11820990309.\n##  9 Afghanistan Asia       1992    41.7 16317921      649. 10595901589.\n## 10 Afghanistan Asia       1997    41.8 22227415      635. 14121995875.\n## # … with 1,694 more rows\ngapminder## # A tibble: 1,704 × 6\n##    country     continent  year lifeExp      pop gdpPercap\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.\n##  6 Afghanistan Asia       1977    38.4 14880372      786.\n##  7 Afghanistan Asia       1982    39.9 12881816      978.\n##  8 Afghanistan Asia       1987    40.8 13867957      852.\n##  9 Afghanistan Asia       1992    41.7 16317921      649.\n## 10 Afghanistan Asia       1997    41.8 22227415      635.\n## # … with 1,694 more rows\ngapminder <- mutate(gapminder, gdp = pop * gdpPercap)\ngapminder## # A tibble: 1,704 × 7\n##    country     continent  year lifeExp      pop gdpPercap          gdp\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>        <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.  6567086330.\n##  2 Afghanistan Asia       1957    30.3  9240934      821.  7585448670.\n##  3 Afghanistan Asia       1962    32.0 10267083      853.  8758855797.\n##  4 Afghanistan Asia       1967    34.0 11537966      836.  9648014150.\n##  5 Afghanistan Asia       1972    36.1 13079460      740.  9678553274.\n##  6 Afghanistan Asia       1977    38.4 14880372      786. 11697659231.\n##  7 Afghanistan Asia       1982    39.9 12881816      978. 12598563401.\n##  8 Afghanistan Asia       1987    40.8 13867957      852. 11820990309.\n##  9 Afghanistan Asia       1992    41.7 16317921      649. 10595901589.\n## 10 Afghanistan Asia       1997    41.8 22227415      635. 14121995875.\n## # … with 1,694 more rows"},{"path":"data-wrangling.html","id":"interlude-begind-the-magic-handling-data-with-base-r","chapter":"Lesson 2 Data Wrangling","heading":"2.4.4 Interlude: Begind the magic, handling data with base-R","text":"even dataframes / tibbles?tibbleget elements vectorget elements tibbleget elements list","code":"\ntest_tibble <- tibble(\n  x = 1:5,\n  y = x ^ 2,\n  z = c(\"hello\", \"world\", \"test\", \"four\", \"five\")\n)\ntest_tibble## # A tibble: 5 × 3\n##       x     y z    \n##   <int> <dbl> <chr>\n## 1     1     1 hello\n## 2     2     4 world\n## 3     3     9 test \n## 4     4    16 four \n## 5     5    25 five\ntest_tibble[c(1, 3)]## # A tibble: 5 × 2\n##       x z    \n##   <int> <chr>\n## 1     1 hello\n## 2     2 world\n## 3     3 test \n## 4     4 four \n## 5     5 five\ntest_tibble[c(\"x\", \"z\")]## # A tibble: 5 × 2\n##       x z    \n##   <int> <chr>\n## 1     1 hello\n## 2     2 world\n## 3     3 test \n## 4     4 four \n## 5     5 five\ntest_tibble[1, c(1, 2)]## # A tibble: 1 × 2\n##       x     y\n##   <int> <dbl>\n## 1     1     1\ntest_tibble$x## [1] 1 2 3 4 5\ntest_tibble[[1]]## [1] 1 2 3 4 5\npull(test_tibble, x)## [1] 1 2 3 4 5\nx <- 1:10\nx[1] <- 42\nx##  [1] 42  2  3  4  5  6  7  8  9 10"},{"path":"data-wrangling.html","id":"the-pipe","chapter":"Lesson 2 Data Wrangling","heading":"2.4.5 The pipe %>%","text":"performing one stepcompare ggplot +basic tidyverse functions take data first argumentreading code headnote |>Ctrl+Shift+M","code":"\nsubset_gapminder <- select(gapminder, country, year, pop)\nfiltered_gapminder <- filter(subset_gapminder, year > 200)\nfinal_gapminder <- mutate(filtered_gapminder, pop_thousands = pop / 1000)\nfinal_gapminder## # A tibble: 1,704 × 4\n##    country      year      pop pop_thousands\n##    <chr>       <dbl>    <dbl>         <dbl>\n##  1 Afghanistan  1952  8425333         8425.\n##  2 Afghanistan  1957  9240934         9241.\n##  3 Afghanistan  1962 10267083        10267.\n##  4 Afghanistan  1967 11537966        11538.\n##  5 Afghanistan  1972 13079460        13079.\n##  6 Afghanistan  1977 14880372        14880.\n##  7 Afghanistan  1982 12881816        12882.\n##  8 Afghanistan  1987 13867957        13868.\n##  9 Afghanistan  1992 16317921        16318.\n## 10 Afghanistan  1997 22227415        22227.\n## # … with 1,694 more rows\nfinal_gapminder <- gapminder %>% \n  select(country, year, pop) %>% \n  filter(year > 2000) %>% \n  mutate(pop_thousands = pop / 1000)\n\nfinal_gapminder## # A tibble: 284 × 4\n##    country      year      pop pop_thousands\n##    <chr>       <dbl>    <dbl>         <dbl>\n##  1 Afghanistan  2002 25268405        25268.\n##  2 Afghanistan  2007 31889923        31890.\n##  3 Albania      2002  3508512         3509.\n##  4 Albania      2007  3600523         3601.\n##  5 Algeria      2002 31287142        31287.\n##  6 Algeria      2007 33333216        33333.\n##  7 Angola       2002 10866106        10866.\n##  8 Angola       2007 12420476        12420.\n##  9 Argentina    2002 38331121        38331.\n## 10 Argentina    2007 40301927        40302.\n## # … with 274 more rows"},{"path":"data-wrangling.html","id":"arrange","chapter":"Lesson 2 Data Wrangling","heading":"2.4.6 arrange","text":"ascending desc","code":"\ngapminder %>% \n  arrange(year)## # A tibble: 1,704 × 7\n##    country     continent  year lifeExp      pop gdpPercap           gdp\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>         <dbl>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.   6567086330.\n##  2 Albania     Europe     1952    55.2  1282697     1601.   2053669902.\n##  3 Algeria     Africa     1952    43.1  9279525     2449.  22725632678.\n##  4 Angola      Africa     1952    30.0  4232095     3521.  14899557133.\n##  5 Argentina   Americas   1952    62.5 17876956     5911. 105676319105.\n##  6 Australia   Oceania    1952    69.1  8691212    10040.  87256254102.\n##  7 Austria     Europe     1952    66.8  6927772     6137.  42516266683.\n##  8 Bahrain     Asia       1952    50.9   120447     9867.   1188460759.\n##  9 Bangladesh  Asia       1952    37.5 46886859      684.  32082059995.\n## 10 Belgium     Europe     1952    68    8730405     8343.  72838686716.\n## # … with 1,694 more rows\ngapminder %>% \n  arrange(desc(year))## # A tibble: 1,704 × 7\n##    country     continent  year lifeExp       pop gdpPercap           gdp\n##    <chr>       <chr>     <dbl>   <dbl>     <dbl>     <dbl>         <dbl>\n##  1 Afghanistan Asia       2007    43.8  31889923      975.  31079291949.\n##  2 Albania     Europe     2007    76.4   3600523     5937.  21376411360.\n##  3 Algeria     Africa     2007    72.3  33333216     6223. 207444851958.\n##  4 Angola      Africa     2007    42.7  12420476     4797.  59583895818.\n##  5 Argentina   Americas   2007    75.3  40301927    12779. 515033625357.\n##  6 Australia   Oceania    2007    81.2  20434176    34435. 703658358894.\n##  7 Austria     Europe     2007    79.8   8199783    36126. 296229400691.\n##  8 Bahrain     Asia       2007    75.6    708573    29796.  21112675360.\n##  9 Bangladesh  Asia       2007    64.1 150448339     1391. 209311822134.\n## 10 Belgium     Europe     2007    79.4  10392226    33693. 350141166520.\n## # … with 1,694 more rows"},{"path":"data-wrangling.html","id":"summarise","chapter":"Lesson 2 Data Wrangling","heading":"2.4.7 summarise","text":"","code":"\ngapminder %>% \n  summarise(\n    max_year = min(year),\n    pop = max(pop),\n    mean_life_expectancy = mean(lifeExp)\n  )## # A tibble: 1 × 3\n##   max_year        pop mean_life_expectancy\n##      <dbl>      <dbl>                <dbl>\n## 1     1952 1318683096                 59.5"},{"path":"data-wrangling.html","id":"group_by","chapter":"Lesson 2 Data Wrangling","heading":"2.4.8 group_by","text":"","code":"\ngapminder %>% \n  group_by(year) %>% \n  summarise(\n    mean(lifeExp)\n  )## # A tibble: 12 × 2\n##     year `mean(lifeExp)`\n##    <dbl>           <dbl>\n##  1  1952            49.1\n##  2  1957            51.5\n##  3  1962            53.6\n##  4  1967            55.7\n##  5  1972            57.6\n##  6  1977            59.6\n##  7  1982            61.5\n##  8  1987            63.2\n##  9  1992            64.2\n## 10  1997            65.0\n## 11  2002            65.7\n## 12  2007            67.0\ngapminder %>% \n  group_by(year, continent) %>% \n  summarise(\n    mean(lifeExp)\n  ) %>%\n  ungroup()## # A tibble: 60 × 3\n##     year continent `mean(lifeExp)`\n##    <dbl> <chr>               <dbl>\n##  1  1952 Africa               39.1\n##  2  1952 Americas             53.3\n##  3  1952 Asia                 46.3\n##  4  1952 Europe               64.4\n##  5  1952 Oceania              69.3\n##  6  1957 Africa               41.3\n##  7  1957 Americas             56.0\n##  8  1957 Asia                 49.3\n##  9  1957 Europe               66.7\n## 10  1957 Oceania              70.3\n## # … with 50 more rows\ngapminder %>% \n  group_by(year) %>%\n  mutate(pop = pop / sum(pop))## # A tibble: 1,704 × 7\n## # Groups:   year [12]\n##    country     continent  year lifeExp     pop gdpPercap          gdp\n##    <chr>       <chr>     <dbl>   <dbl>   <dbl>     <dbl>        <dbl>\n##  1 Afghanistan Asia       1952    28.8 0.00350      779.  6567086330.\n##  2 Afghanistan Asia       1957    30.3 0.00347      821.  7585448670.\n##  3 Afghanistan Asia       1962    32.0 0.00354      853.  8758855797.\n##  4 Afghanistan Asia       1967    34.0 0.00359      836.  9648014150.\n##  5 Afghanistan Asia       1972    36.1 0.00366      740.  9678553274.\n##  6 Afghanistan Asia       1977    38.4 0.00379      786. 11697659231.\n##  7 Afghanistan Asia       1982    39.9 0.00300      978. 12598563401.\n##  8 Afghanistan Asia       1987    40.8 0.00296      852. 11820990309.\n##  9 Afghanistan Asia       1992    41.7 0.00319      649. 10595901589.\n## 10 Afghanistan Asia       1997    41.8 0.00403      635. 14121995875.\n## # … with 1,694 more rows"},{"path":"data-wrangling.html","id":"others","chapter":"Lesson 2 Data Wrangling","heading":"2.4.9 others:","text":"renamen()count","code":"\ngapminder %>% \n  rename(population = pop)## # A tibble: 1,704 × 7\n##    country     continent  year lifeExp population gdpPercap          gdp\n##    <chr>       <chr>     <dbl>   <dbl>      <dbl>     <dbl>        <dbl>\n##  1 Afghanistan Asia       1952    28.8    8425333      779.  6567086330.\n##  2 Afghanistan Asia       1957    30.3    9240934      821.  7585448670.\n##  3 Afghanistan Asia       1962    32.0   10267083      853.  8758855797.\n##  4 Afghanistan Asia       1967    34.0   11537966      836.  9648014150.\n##  5 Afghanistan Asia       1972    36.1   13079460      740.  9678553274.\n##  6 Afghanistan Asia       1977    38.4   14880372      786. 11697659231.\n##  7 Afghanistan Asia       1982    39.9   12881816      978. 12598563401.\n##  8 Afghanistan Asia       1987    40.8   13867957      852. 11820990309.\n##  9 Afghanistan Asia       1992    41.7   16317921      649. 10595901589.\n## 10 Afghanistan Asia       1997    41.8   22227415      635. 14121995875.\n## # … with 1,694 more rows\ngapminder %>% \n  group_by(year) %>% \n  mutate(n = n())## # A tibble: 1,704 × 8\n## # Groups:   year [12]\n##    country     continent  year lifeExp      pop gdpPercap          gdp     n\n##    <chr>       <chr>     <dbl>   <dbl>    <dbl>     <dbl>        <dbl> <int>\n##  1 Afghanistan Asia       1952    28.8  8425333      779.  6567086330.   142\n##  2 Afghanistan Asia       1957    30.3  9240934      821.  7585448670.   142\n##  3 Afghanistan Asia       1962    32.0 10267083      853.  8758855797.   142\n##  4 Afghanistan Asia       1967    34.0 11537966      836.  9648014150.   142\n##  5 Afghanistan Asia       1972    36.1 13079460      740.  9678553274.   142\n##  6 Afghanistan Asia       1977    38.4 14880372      786. 11697659231.   142\n##  7 Afghanistan Asia       1982    39.9 12881816      978. 12598563401.   142\n##  8 Afghanistan Asia       1987    40.8 13867957      852. 11820990309.   142\n##  9 Afghanistan Asia       1992    41.7 16317921      649. 10595901589.   142\n## 10 Afghanistan Asia       1997    41.8 22227415      635. 14121995875.   142\n## # … with 1,694 more rows\ngapminder %>% \n  count(year, country) %>% \n  count(n)## # A tibble: 1 × 2\n##       n    nn\n##   <int> <int>\n## 1     1  1704"},{"path":"data-wrangling.html","id":"visualization-and-our-first-encounter-with-factors","chapter":"Lesson 2 Data Wrangling","heading":"2.5 Visualization and our first encounter with factors","text":" life expectancy timelife expectancy timecontrolling order thingscontrolling order thingsfct_fct_fct_relevelfct_releveladd color plotadd color plotheadheadnamed vectors!named vectors!pull $pull $","code":"\ngapminder %>% \n  ggplot(aes(year, lifeExp, group = country)) +\n  geom_line() +\n  facet_wrap(~continent)\ngapminder %>% \n  ggplot(aes(year, lifeExp, color = country)) +\n  geom_line() +\n  facet_wrap(~continent) +\n  guides(color = \"none\")\ngapminder %>% \n  mutate(continent = fct_relevel(continent, c(\"Oceania\"))) %>% \n  ggplot(aes(year, lifeExp, color = country)) +\n  geom_line() +\n  facet_wrap(~continent) +\n  guides(color = \"none\")\nanimals <- c(\"cat\", \"dog\", \"bear\")\nanimals <- factor(animals, levels = c(\"cat\", \"dog\"), ordered = TRUE)\ncountry_colors <- read_csv(\"data/02/country_colors.csv\")\ncountry_colors## # A tibble: 142 × 2\n##    country          color  \n##    <chr>            <chr>  \n##  1 Nigeria          #7F3B08\n##  2 Egypt            #833D07\n##  3 Ethiopia         #873F07\n##  4 Congo, Dem. Rep. #8B4107\n##  5 South Africa     #8F4407\n##  6 Sudan            #934607\n##  7 Tanzania         #974807\n##  8 Kenya            #9B4A06\n##  9 Morocco          #9F4D06\n## 10 Algeria          #A34F06\n## # … with 132 more rows\nx <- c(first = 1, second = 3, hello = 5)\nx[\"first\"]## first \n##     1\ncolor <- country_colors$color\nnames(color) <- country_colors$country\nhead(color)##          Nigeria            Egypt         Ethiopia Congo, Dem. Rep. \n##        \"#7F3B08\"        \"#833D07\"        \"#873F07\"        \"#8B4107\" \n##     South Africa            Sudan \n##        \"#8F4407\"        \"#934607\"\ngapminder %>% \n  mutate(continent = fct_relevel(continent, c(\"Oceania\"))) %>% \n  ggplot(aes(year, lifeExp, color = country)) +\n  geom_line() +\n  facet_wrap(~continent) +\n  guides(color = \"none\") +\n  scale_color_manual(values = color)"},{"path":"data-wrangling.html","id":"exercises-1","chapter":"Lesson 2 Data Wrangling","heading":"2.6 Exercises","text":"","code":""},{"path":"data-wrangling.html","id":"resources","chapter":"Lesson 2 Data Wrangling","heading":"2.7 Resources","text":"","code":""},{"path":"data-wrangling.html","id":"package-documentation","chapter":"Lesson 2 Data Wrangling","heading":"2.8 Package Documentation","text":"tidyverse websiteThe readr package website cheatsheetThe dplyr package website cheatsheet","code":""},{"path":"data-wrangling.html","id":"getting-help","chapter":"Lesson 2 Data Wrangling","heading":"2.9 Getting Help","text":"find helpR4DS online learning community","code":""},{"path":"tidy-data.html","id":"tidy-data","chapter":"Lesson 3 Tidy data","heading":"Lesson 3 Tidy data","text":"… explore concept Tidy Data learn \nadvanced data wrangling techniques","code":"\nlibrary(tidyverse)"},{"path":"tidy-data.html","id":"recap","chapter":"Lesson 3 Tidy data","heading":"3.1 Recap","text":"speedrun lecture 1 2","code":""},{"path":"tidy-data.html","id":"tidy-data-1","chapter":"Lesson 3 Tidy data","heading":"3.2 Tidy data","text":"","code":""},{"path":"tidy-data.html","id":"what-and-why-is-tidy-data","chapter":"Lesson 3 Tidy data","heading":"3.2.1 What and why is tidy data?","text":"Figure https://r4ds..co.nz/tidy-data.html Wickham Grolemund10","code":"\npalmerpenguins::penguins## # A tibble: 344 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # … with 334 more rows, and 2 more variables: sex <fct>, year <int>"},{"path":"tidy-data.html","id":"make-data-tidy","chapter":"Lesson 3 Tidy data","heading":"3.2.2 Make data tidy","text":"tidyr package.“Happy families alike; every unhappy family unhappy way”\n— Leo Tolstoy (https://tidyr.tidyverse.org/articles/tidy-data.html)Let’s make data tidy!table1","code":"\ntable1## # A tibble: 6 × 4\n##   country      year  cases population\n##   <chr>       <int>  <int>      <int>\n## 1 Afghanistan  1999    745   19987071\n## 2 Afghanistan  2000   2666   20595360\n## 3 Brazil       1999  37737  172006362\n## 4 Brazil       2000  80488  174504898\n## 5 China        1999 212258 1272915272\n## 6 China        2000 213766 1280428583"},{"path":"tidy-data.html","id":"pivot_wider","chapter":"Lesson 3 Tidy data","heading":"3.2.3 pivot_wider","text":"table2","code":"\ntable2## # A tibble: 12 × 4\n##    country      year type            count\n##    <chr>       <int> <chr>           <int>\n##  1 Afghanistan  1999 cases             745\n##  2 Afghanistan  1999 population   19987071\n##  3 Afghanistan  2000 cases            2666\n##  4 Afghanistan  2000 population   20595360\n##  5 Brazil       1999 cases           37737\n##  6 Brazil       1999 population  172006362\n##  7 Brazil       2000 cases           80488\n##  8 Brazil       2000 population  174504898\n##  9 China        1999 cases          212258\n## 10 China        1999 population 1272915272\n## 11 China        2000 cases          213766\n## 12 China        2000 population 1280428583\ntable2 %>% \n  pivot_wider(names_from = type, values_from = count)## # A tibble: 6 × 4\n##   country      year  cases population\n##   <chr>       <int>  <int>      <int>\n## 1 Afghanistan  1999    745   19987071\n## 2 Afghanistan  2000   2666   20595360\n## 3 Brazil       1999  37737  172006362\n## 4 Brazil       2000  80488  174504898\n## 5 China        1999 212258 1272915272\n## 6 China        2000 213766 1280428583"},{"path":"tidy-data.html","id":"separate","chapter":"Lesson 3 Tidy data","heading":"3.2.4 separate","text":"table3","code":"\ntable3 %>% \n  separate(col = rate, into = c(\"cases\", \"population\"), sep = \"/\")## # A tibble: 6 × 4\n##   country      year cases  population\n##   <chr>       <int> <chr>  <chr>     \n## 1 Afghanistan  1999 745    19987071  \n## 2 Afghanistan  2000 2666   20595360  \n## 3 Brazil       1999 37737  172006362 \n## 4 Brazil       2000 80488  174504898 \n## 5 China        1999 212258 1272915272\n## 6 China        2000 213766 1280428583"},{"path":"tidy-data.html","id":"pivot_longer","chapter":"Lesson 3 Tidy data","heading":"3.2.5 pivot_longer","text":"table4a","code":"\ntable4a %>% \n  pivot_longer(-country, names_to = \"year\", values_to = \"cases\")## # A tibble: 6 × 3\n##   country     year   cases\n##   <chr>       <chr>  <int>\n## 1 Afghanistan 1999     745\n## 2 Afghanistan 2000    2666\n## 3 Brazil      1999   37737\n## 4 Brazil      2000   80488\n## 5 China       1999  212258\n## 6 China       2000  213766\ntable4b %>% \n  pivot_longer(-country, names_to = \"year\", values_to = \"population\")## # A tibble: 6 × 3\n##   country     year  population\n##   <chr>       <chr>      <int>\n## 1 Afghanistan 1999    19987071\n## 2 Afghanistan 2000    20595360\n## 3 Brazil      1999   172006362\n## 4 Brazil      2000   174504898\n## 5 China       1999  1272915272\n## 6 China       2000  1280428583\nclean_wide_data <- function(data, values_column) {\n  data %>% \n    pivot_longer(-country, names_to = \"year\", values_to = values_column)\n}\n\nclean4a <- table4a %>% \n  clean_wide_data(\"cases\")\nclean4b <- table4b %>% \n  clean_wide_data(\"population\")"},{"path":"tidy-data.html","id":"left_join","chapter":"Lesson 3 Tidy data","heading":"3.2.6 left_join","text":"table4a table4b","code":"\nleft_join(clean4a, clean4b, by = c(\"country\", \"year\"))## # A tibble: 6 × 4\n##   country     year   cases population\n##   <chr>       <chr>  <int>      <int>\n## 1 Afghanistan 1999     745   19987071\n## 2 Afghanistan 2000    2666   20595360\n## 3 Brazil      1999   37737  172006362\n## 4 Brazil      2000   80488  174504898\n## 5 China       1999  212258 1272915272\n## 6 China       2000  213766 1280428583"},{"path":"tidy-data.html","id":"unite","chapter":"Lesson 3 Tidy data","heading":"3.2.7 unite","text":"table5","code":"\ntable5 %>% \n  unite(\"year\", century, year, sep = \"\") %>% \n  separate(rate, c(\"cases\", \"population\")) %>% \n  mutate(\n    year = parse_number(year),\n    cases = parse_number(cases),\n    population = parse_number(population)\n  )## # A tibble: 6 × 4\n##   country      year  cases population\n##   <chr>       <dbl>  <dbl>      <dbl>\n## 1 Afghanistan  1999    745   19987071\n## 2 Afghanistan  2000   2666   20595360\n## 3 Brazil       1999  37737  172006362\n## 4 Brazil       2000  80488  174504898\n## 5 China        1999 212258 1272915272\n## 6 China        2000 213766 1280428583\ntable5 %>% \n  unite(\"year\", century, year, sep = \"\") %>% \n  separate(rate, c(\"cases\", \"population\")) %>% \n  mutate(\n    across(c(year, cases, population), parse_number)\n  )## # A tibble: 6 × 4\n##   country      year  cases population\n##   <chr>       <dbl>  <dbl>      <dbl>\n## 1 Afghanistan  1999    745   19987071\n## 2 Afghanistan  2000   2666   20595360\n## 3 Brazil       1999  37737  172006362\n## 4 Brazil       2000  80488  174504898\n## 5 China        1999 212258 1272915272\n## 6 China        2000 213766 1280428583\ntable5 %>% \n  unite(\"year\", century, year, sep = \"\") %>% \n  separate(rate, c(\"cases\", \"population\")) %>% \n  mutate(\n    across(-country, parse_number)\n  )## # A tibble: 6 × 4\n##   country      year  cases population\n##   <chr>       <dbl>  <dbl>      <dbl>\n## 1 Afghanistan  1999    745   19987071\n## 2 Afghanistan  2000   2666   20595360\n## 3 Brazil       1999  37737  172006362\n## 4 Brazil       2000  80488  174504898\n## 5 China        1999 212258 1272915272\n## 6 China        2000 213766 1280428583"},{"path":"tidy-data.html","id":"another-example","chapter":"Lesson 3 Tidy data","heading":"3.2.8 Another example","text":"billboardexplicit vs implicit NAsna.omit","code":"\nbillboard %>% \n  pivot_longer(starts_with(\"wk\"), names_to = \"week\", values_to = \"placement\") %>% \n  mutate(week = parse_number(week))## # A tibble: 24,092 × 5\n##    artist track                   date.entered  week placement\n##    <chr>  <chr>                   <date>       <dbl>     <dbl>\n##  1 2 Pac  Baby Don't Cry (Keep... 2000-02-26       1        87\n##  2 2 Pac  Baby Don't Cry (Keep... 2000-02-26       2        82\n##  3 2 Pac  Baby Don't Cry (Keep... 2000-02-26       3        72\n##  4 2 Pac  Baby Don't Cry (Keep... 2000-02-26       4        77\n##  5 2 Pac  Baby Don't Cry (Keep... 2000-02-26       5        87\n##  6 2 Pac  Baby Don't Cry (Keep... 2000-02-26       6        94\n##  7 2 Pac  Baby Don't Cry (Keep... 2000-02-26       7        99\n##  8 2 Pac  Baby Don't Cry (Keep... 2000-02-26       8        NA\n##  9 2 Pac  Baby Don't Cry (Keep... 2000-02-26       9        NA\n## 10 2 Pac  Baby Don't Cry (Keep... 2000-02-26      10        NA\n## # … with 24,082 more rows\ntidy_bilboard <- billboard %>% \n  pivot_longer(starts_with(\"wk\"),\n    names_to = \"week\",\n    values_to = \"placement\",\n    names_prefix = \"wk\",\n    names_transform = list(week = as.integer)\n  )\nplt <- tidy_bilboard %>% \n  ggplot(aes(week, placement)) +\n  geom_point(aes(label = paste(artist, track))) +\n  geom_line(aes(group = paste(artist, track)))\n\nplotly::ggplotly(plt)"},{"path":"tidy-data.html","id":"more-shapes-for-data","chapter":"Lesson 3 Tidy data","heading":"3.3 More shapes for data","text":"omitted:\nmatrices\narrays\nmatricesarrays","code":""},{"path":"tidy-data.html","id":"lists","chapter":"Lesson 3 Tidy data","heading":"3.3.1 Lists","text":"","code":"\nc(first = 1, second = 2)##  first second \n##      1      2\nx <- list(first = 1, second = 2, \"some text\", list(1, 2), 1:5)\nx## $first\n## [1] 1\n## \n## $second\n## [1] 2\n## \n## [[3]]\n## [1] \"some text\"\n## \n## [[4]]\n## [[4]][[1]]\n## [1] 1\n## \n## [[4]][[2]]\n## [1] 2\n## \n## \n## [[5]]\n## [1] 1 2 3 4 5\npalmerpenguins::penguins## # A tibble: 344 × 8\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # … with 334 more rows, and 2 more variables: sex <fct>, year <int>"},{"path":"tidy-data.html","id":"nested-data","chapter":"Lesson 3 Tidy data","heading":"3.3.2 Nested data","text":"","code":"\nexample <- tibble(\n  x = 1:3,\n  y = list(\n    \"hello\",\n    TRUE,\n    1:4\n  )\n)\n\nexample## # A tibble: 3 × 2\n##       x y        \n##   <int> <list>   \n## 1     1 <chr [1]>\n## 2     2 <lgl [1]>\n## 3     3 <int [4]>\n# View(example)\nnested <- palmerpenguins::penguins %>% \n  nest(data = -island)\n\nnested## # A tibble: 3 × 2\n##   island    data              \n##   <fct>     <list>            \n## 1 Torgersen <tibble [52 × 7]> \n## 2 Biscoe    <tibble [168 × 7]>\n## 3 Dream     <tibble [124 × 7]>\nnested$data[[1]]## # A tibble: 52 × 7\n##    species bill_length_mm bill_depth_mm flipper_length_… body_mass_g sex    year\n##    <fct>            <dbl>         <dbl>            <int>       <int> <fct> <int>\n##  1 Adelie            39.1          18.7              181        3750 male   2007\n##  2 Adelie            39.5          17.4              186        3800 fema…  2007\n##  3 Adelie            40.3          18                195        3250 fema…  2007\n##  4 Adelie            NA            NA                 NA          NA <NA>   2007\n##  5 Adelie            36.7          19.3              193        3450 fema…  2007\n##  6 Adelie            39.3          20.6              190        3650 male   2007\n##  7 Adelie            38.9          17.8              181        3625 fema…  2007\n##  8 Adelie            39.2          19.6              195        4675 male   2007\n##  9 Adelie            34.1          18.1              193        3475 <NA>   2007\n## 10 Adelie            42            20.2              190        4250 <NA>   2007\n## # … with 42 more rows\nnested %>% \n  unnest(data)## # A tibble: 344 × 8\n##    island    species bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>     <fct>            <dbl>         <dbl>             <int>       <int>\n##  1 Torgersen Adelie            39.1          18.7               181        3750\n##  2 Torgersen Adelie            39.5          17.4               186        3800\n##  3 Torgersen Adelie            40.3          18                 195        3250\n##  4 Torgersen Adelie            NA            NA                  NA          NA\n##  5 Torgersen Adelie            36.7          19.3               193        3450\n##  6 Torgersen Adelie            39.3          20.6               190        3650\n##  7 Torgersen Adelie            38.9          17.8               181        3625\n##  8 Torgersen Adelie            39.2          19.6               195        4675\n##  9 Torgersen Adelie            34.1          18.1               193        3475\n## 10 Torgersen Adelie            42            20.2               190        4250\n## # … with 334 more rows, and 2 more variables: sex <fct>, year <int>"},{"path":"tidy-data.html","id":"exercises-2","chapter":"Lesson 3 Tidy data","heading":"3.4 Exercises","text":"","code":""},{"path":"tidy-data.html","id":"tidy-data-2","chapter":"Lesson 3 Tidy data","heading":"3.4.1 Tidy data","text":"","code":""},{"path":"tidy-data.html","id":"resources-1","chapter":"Lesson 3 Tidy data","heading":"3.5 Resources","text":"tidyr documentationpurrr documentationstringr documentation\nworking text helpful cheatsheet \nregular expressions mentioned video","code":""},{"path":"functions.html","id":"functions","chapter":"Lesson 4 Functions","heading":"Lesson 4 Functions","text":"… functions, bringing whole tidyverse together \nexploring advanced dplyr data wrangling techniques.just notes lecture \nfilled recording.\nCheck back later completed script.","code":""},{"path":"functions.html","id":"motivation","chapter":"Lesson 4 Functions","heading":"4.1 Motivation","text":"","code":""},{"path":"functions.html","id":"iteration","chapter":"Lesson 4 Functions","heading":"4.2 Iteration","text":"","code":""},{"path":"functions.html","id":"functional-programming","chapter":"Lesson 4 Functions","heading":"4.2.1 Functional Programming","text":"","code":""},{"path":"functions.html","id":"the-imperative-programming-approach","chapter":"Lesson 4 Functions","heading":"4.2.2 The Imperative Programming Approach","text":"","code":""},{"path":"functions.html","id":"if-you-copy-and-paste-the-same-code-more-than-three-times-write-a-function.","chapter":"Lesson 4 Functions","heading":"4.3 “If you copy and paste the same code more than three times, write a function.”","text":"","code":""},{"path":"functions.html","id":"noticing-a-pattern","chapter":"Lesson 4 Functions","heading":"4.3.1 Noticing a Pattern","text":"","code":""},{"path":"functions.html","id":"where-to-put-your-functions","chapter":"Lesson 4 Functions","heading":"4.3.2 Where to put your Functions","text":"","code":""},{"path":"functions.html","id":"many-models","chapter":"Lesson 4 Functions","heading":"4.4 Many Models","text":"","code":""},{"path":"functions.html","id":"advanced-dplyr","chapter":"Lesson 4 Functions","heading":"4.5 Advanced dplyr","text":"","code":""},{"path":"functions.html","id":"exercises-3","chapter":"Lesson 4 Functions","heading":"4.6 Exercises","text":"","code":""},{"path":"functions.html","id":"the-whole-deal","chapter":"Lesson 4 Functions","heading":"4.7 The whole Deal","text":"","code":""},{"path":"functions.html","id":"roman-emperors","chapter":"Lesson 4 Functions","heading":"4.7.1 Roman emperors","text":"","code":""},{"path":"functions.html","id":"dairy-products-in-the-us","chapter":"Lesson 4 Functions","heading":"4.7.2 Dairy Products in the US","text":"","code":""},{"path":"functions.html","id":"resources-2","chapter":"Lesson 4 Functions","heading":"4.8 Resources","text":"purrr documentationstringr documentationdplyr documentation","code":""},{"path":"hypothesis-testing.html","id":"hypothesis-testing","chapter":"Lesson 5 Hypothesis Testing","heading":"Lesson 5 Hypothesis Testing","text":"… reason nature randomness \ndiscover various statistical tests.just notes lecture \nfilled recording.\nCheck back later completed script.","code":""},{"path":"hypothesis-testing.html","id":"motivation-1","chapter":"Lesson 5 Hypothesis Testing","heading":"5.1 Motivation","text":"","code":""},{"path":"hypothesis-testing.html","id":"statistically-significant","chapter":"Lesson 5 Hypothesis Testing","heading":"5.2 Statistically Significant…","text":"","code":""},{"path":"hypothesis-testing.html","id":"getting-our-hands-dirty-with-probability","chapter":"Lesson 5 Hypothesis Testing","heading":"5.3 Getting our Hands dirty with Probability","text":"","code":""},{"path":"hypothesis-testing.html","id":"definitions-hypothesis","chapter":"Lesson 5 Hypothesis Testing","heading":"5.3.1 Definitions: Hypothesis","text":"","code":""},{"path":"hypothesis-testing.html","id":"testing-the-null-hypothesis-with-a-simulation","chapter":"Lesson 5 Hypothesis Testing","heading":"5.3.2 Testing the Null Hypothesis with a Simulation","text":"","code":""},{"path":"hypothesis-testing.html","id":"getting-precise-with-the-binomial-distribution","chapter":"Lesson 5 Hypothesis Testing","heading":"5.3.3 Getting precise with the Binomial Distribution","text":"","code":""},{"path":"hypothesis-testing.html","id":"but-how-much-better-understanding-effect-size-and-power-false-positives-and-false-negatives","chapter":"Lesson 5 Hypothesis Testing","heading":"5.3.4 But how much better? Understanding Effect Size and Power, False Positives and False Negatives","text":"","code":""},{"path":"hypothesis-testing.html","id":"p-value-pitfalls","chapter":"Lesson 5 Hypothesis Testing","heading":"5.4 P-Value Pitfalls","text":"","code":""},{"path":"hypothesis-testing.html","id":"multiple-testing-correction","chapter":"Lesson 5 Hypothesis Testing","heading":"5.4.1 Multiple Testing Correction","text":"","code":""},{"path":"hypothesis-testing.html","id":"other-forms-of-p-hacking","chapter":"Lesson 5 Hypothesis Testing","heading":"5.4.2 Other forms of p-hacking","text":"","code":""},{"path":"hypothesis-testing.html","id":"bayesian-statistics-and-the-base-rate-fallacy","chapter":"Lesson 5 Hypothesis Testing","heading":"5.5 Bayesian Statistics and the Base Rate Fallacy","text":"","code":""},{"path":"hypothesis-testing.html","id":"concepts-discussed-today","chapter":"Lesson 5 Hypothesis Testing","heading":"5.6 Concepts discussed today","text":"","code":""},{"path":"hypothesis-testing.html","id":"exercises-4","chapter":"Lesson 5 Hypothesis Testing","heading":"5.7 Exercises","text":"","code":""},{"path":"hypothesis-testing.html","id":"discovering-a-new-distribution","chapter":"Lesson 5 Hypothesis Testing","heading":"5.7.1 Discovering a new Distribution","text":"","code":""},{"path":"hypothesis-testing.html","id":"resources-3","chapter":"Lesson 5 Hypothesis Testing","heading":"5.8 Resources","text":"https://www.tandfonline.com/doi/full/10.1080/00031305.2016.1154108https://jimgruman.netlify.app/post/education-r/P-Value histograms blogpost David Robinson“Statistics done wrong”","code":""},{"path":"distributions.html","id":"distributions","chapter":"Lesson 6 Distributions","heading":"Lesson 6 Distributions","text":"… explore continuous distributions spotify data,\nfind central limit theorem related statistical tests\nbecome N-dimensional whale sharks.just notes lecture \nfilled recording.\nCheck back later completed script.","code":""},{"path":"distributions.html","id":"some-preparation","chapter":"Lesson 6 Distributions","heading":"6.1 Some Preparation","text":"","code":""},{"path":"distributions.html","id":"sidenote-on-reproducible-environments-with-renv","chapter":"Lesson 6 Distributions","heading":"6.1.1 Sidenote on Reproducible Environments with renv","text":"","code":""},{"path":"distributions.html","id":"all-models-are-wrong-but-some-are-useful","chapter":"Lesson 6 Distributions","heading":"6.2 All models are wrong, but some are useful","text":"","code":""},{"path":"distributions.html","id":"types-of-models","chapter":"Lesson 6 Distributions","heading":"6.2.1 Types of Models","text":"","code":""},{"path":"distributions.html","id":"say-hello-to-spotify-data","chapter":"Lesson 6 Distributions","heading":"6.3 Say Hello to Spotify Data","text":"","code":""},{"path":"distributions.html","id":"visualising-continuous-distributions","chapter":"Lesson 6 Distributions","heading":"6.4 Visualising Continuous Distributions","text":"","code":""},{"path":"distributions.html","id":"summary-statistics","chapter":"Lesson 6 Distributions","heading":"6.4.1 Summary Statistics…","text":"","code":""},{"path":"distributions.html","id":"or-how-to-lie-with-graphs","chapter":"Lesson 6 Distributions","heading":"6.4.2 … or: How to Lie with Graphs","text":"","code":""},{"path":"distributions.html","id":"graphic-devices-fonts-and-the-ggplot-book","chapter":"Lesson 6 Distributions","heading":"6.5 Graphic Devices, Fonts and the ggplot Book","text":"","code":""},{"path":"distributions.html","id":"ggplot-book","chapter":"Lesson 6 Distributions","heading":"6.5.1 ggplot book","text":"","code":""},{"path":"distributions.html","id":"graphics-devics","chapter":"Lesson 6 Distributions","heading":"6.5.2 Graphics Devics","text":"","code":""},{"path":"distributions.html","id":"the-normal-distribution-and-the-central-limit-theorem","chapter":"Lesson 6 Distributions","heading":"6.6 The Normal Distribution and the Central Limit Theorem","text":"","code":""},{"path":"distributions.html","id":"log-normality","chapter":"Lesson 6 Distributions","heading":"6.6.1 Log-normality","text":"","code":""},{"path":"distributions.html","id":"the-t-distribution","chapter":"Lesson 6 Distributions","heading":"6.7 The T-Distribution","text":"","code":""},{"path":"distributions.html","id":"students-t-test","chapter":"Lesson 6 Distributions","heading":"6.8 Student’s T-Test","text":"","code":""},{"path":"distributions.html","id":"wilcoxon-rank-sum-test","chapter":"Lesson 6 Distributions","heading":"6.9 Wilcoxon rank-sum test","text":"","code":""},{"path":"distributions.html","id":"direction-of-testing","chapter":"Lesson 6 Distributions","heading":"6.9.1 Direction of Testing","text":"","code":""},{"path":"distributions.html","id":"confidence-intervals","chapter":"Lesson 6 Distributions","heading":"6.9.2 Confidence Intervals","text":"","code":""},{"path":"distributions.html","id":"chrunching-dimensions-with-dimensionality-reduction-pca","chapter":"Lesson 6 Distributions","heading":"6.10 Chrunching Dimensions with Dimensionality Reduction: PCA","text":"","code":""},{"path":"distributions.html","id":"exercises-5","chapter":"Lesson 6 Distributions","heading":"6.11 Exercises","text":"","code":""},{"path":"distributions.html","id":"the-plotty-horror-picture-show","chapter":"Lesson 6 Distributions","heading":"6.11.1 The Plotty Horror Picture Show","text":"","code":""},{"path":"distributions.html","id":"take-a-sad-plot-and-make-it-better","chapter":"Lesson 6 Distributions","heading":"6.11.2 Take a Sad Plot and Make it Better","text":"","code":""},{"path":"distributions.html","id":"stats-time","chapter":"Lesson 6 Distributions","heading":"6.11.3 Stats Time","text":"","code":""},{"path":"distributions.html","id":"resources-4","chapter":"Lesson 6 Distributions","heading":"6.12 Resources","text":"Tidymodels websiteTidymodels bookggplot bookragg graphics device","code":""},{"path":"fallacies.html","id":"fallacies","chapter":"Lesson 7 Fallacies","heading":"Lesson 7 Fallacies","text":"… hear Stories Warplanes,\nCorrelation Regression explore Datasaurus Dozen.just notes lecture \nfilled recording.\nCheck back later completed script.","code":""},{"path":"fallacies.html","id":"data-considerations","chapter":"Lesson 7 Fallacies","heading":"7.1 Data Considerations","text":"","code":""},{"path":"fallacies.html","id":"section","chapter":"Lesson 7 Fallacies","heading":"7.1.1 1943","text":"","code":""},{"path":"fallacies.html","id":"the-story-of-abraham-wald","chapter":"Lesson 7 Fallacies","heading":"7.1.2 The Story of Abraham Wald","text":"","code":""},{"path":"fallacies.html","id":"thinking-further","chapter":"Lesson 7 Fallacies","heading":"7.1.3 Thinking further","text":"","code":""},{"path":"fallacies.html","id":"miscelaneous","chapter":"Lesson 7 Fallacies","heading":"7.2 Miscelaneous","text":"","code":""},{"path":"fallacies.html","id":"glue","chapter":"Lesson 7 Fallacies","heading":"7.2.1 Glue","text":"","code":""},{"path":"fallacies.html","id":"svgs","chapter":"Lesson 7 Fallacies","heading":"7.2.2 SVGs","text":"","code":""},{"path":"fallacies.html","id":"best-practices","chapter":"Lesson 7 Fallacies","heading":"7.2.3 Best Practices","text":"","code":""},{"path":"fallacies.html","id":"covariance-correlation-and-regression","chapter":"Lesson 7 Fallacies","heading":"7.3 Covariance, Correlation and Regression","text":"","code":""},{"path":"fallacies.html","id":"introducing-the-dataset","chapter":"Lesson 7 Fallacies","heading":"7.3.1 Introducing the Dataset","text":"","code":""},{"path":"fallacies.html","id":"pearson-vs.-spearman-not-a-boxing-match","chapter":"Lesson 7 Fallacies","heading":"7.3.2 Pearson vs. Spearman (not a Boxing Match)","text":"","code":""},{"path":"fallacies.html","id":"linear-regression","chapter":"Lesson 7 Fallacies","heading":"7.3.3 Linear Regression","text":"","code":""},{"path":"fallacies.html","id":"non-linear-least-squares","chapter":"Lesson 7 Fallacies","heading":"7.4 Non-linear Least Squares","text":"","code":""},{"path":"fallacies.html","id":"exercises-6","chapter":"Lesson 7 Fallacies","heading":"7.5 Exercises","text":"","code":""},{"path":"fallacies.html","id":"the-datasaurus-dozen","chapter":"Lesson 7 Fallacies","heading":"7.5.1 The Datasaurus Dozen","text":"","code":""},{"path":"freestyle.html","id":"freestyle","chapter":"Lesson 8 Freestyle","heading":"Lesson 8 Freestyle","text":"… venture unknown show example data\nanalysis.just notes lecture \nfilled recording.\nCheck back later completed script.","code":""},{"path":"freestyle.html","id":"feedback","chapter":"Lesson 8 Freestyle","heading":"8.1 Feedback","text":"send round link feedback form.\nanonymous.","code":""},{"path":"resources-5.html","id":"resources-5","chapter":"Resources","heading":"Resources","text":"Learning R can quite journey.\ncollecting useful links resources extra page.\nhelp understand topics covered, dive deeper interesting want discover cool things can R.","code":""},{"path":"resources-5.html","id":"learning-the-tidyverse","chapter":"Resources","heading":"8.2 Learning the tidyverse","text":"R Data Science11R4DS online CommunityRStudio Cheat Sheets!Modern Dive12RStudio Education","code":""},{"path":"resources-5.html","id":"learning-rmarkdown","chapter":"Resources","heading":"8.3 Learning Rmarkdown","text":"rmarkdown cheatsheetrmarkdown referencepandoc manual (advanced)rmarkdown reproducible analysisrmarkdown website","code":""},{"path":"resources-5.html","id":"learning-r-in-general","chapter":"Resources","heading":"8.4 Learning R in general","text":"Advanced R13Hands Programming R14R Packages15Data Visualization: Practical Introduction16Graph Cookbook17","code":""},{"path":"resources-5.html","id":"learning-statistics","chapter":"Resources","heading":"8.5 Learning Statistics","text":"Intuitive Biostatistics18Statistics Done Wrong19StatQuest!!! Josh StarnerModern Statistics Modern Biology","code":""},{"path":"resources-5.html","id":"helpful-tools","chapter":"Resources","heading":"8.6 Helpful tools","text":"Generate ggplots via graphical user interface esquisee","code":""},{"path":"resources-5.html","id":"talks-podcasts-blogs-videos","chapter":"Resources","heading":"8.7 Talks, Podcasts, Blogs, Videos","text":"Just people inspiring blogposts, videos likes.David Robinson\nYouTube\nwebsite\nYouTubewebsiteJulia Silge\nYouTube\nwebsite\nYouTubewebsiteAlison Hill\nwebsite\nwebsiteThomas Lin Pedersen\nwebsite\nwebsite","code":""},{"path":"resources-5.html","id":"misc","chapter":"Resources","heading":"8.8 Misc","text":"Cute insightful illustrations20Happy Git R","code":""},{"path":"resources-5.html","id":"package-documentation-1","chapter":"Resources","heading":"8.9 Package Documentation","text":"tidyversetidymodelsrmarkdownreadrdplyrggplottidyrstringrpurrrragg","code":""},{"path":"resources-5.html","id":"books-and-manuals","chapter":"Resources","heading":"8.10 Books and Manuals","text":"Tidymodels bookggplot bookRmarkdown CookbookRmarkdown Book","code":""},{"path":"resources-5.html","id":"getting-help-1","chapter":"Resources","heading":"8.11 Getting Help","text":"find helpR4DS online learning community","code":""},{"path":"resources-5.html","id":"lists-of-resources","chapter":"Resources","heading":"8.12 Lists of Resources","text":"meta section. list lists:big book Rr rest us","code":""},{"path":"resources-5.html","id":"packages-that-enable-this-lecture-format","chapter":"Resources","heading":"8.13 Packages that enable this lecture format","text":"R R Core Team21knitr Yihui Xie22rmarkdown JJ Allaire et al.23xaringan Yihui Xie24","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
