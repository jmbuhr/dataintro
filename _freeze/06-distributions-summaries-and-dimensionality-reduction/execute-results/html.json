{
  "hash": "b1e7ec918b97e7a724380971ea7cb4cb",
  "result": {
    "markdown": "---\naliases:\n  - distributions-summaries-and-dimensionality-reduction.html\n---\n\n# Distributions, Summaries and Dimensionality Reduction\n\n\n\n\n\n> ... in which we explore continuous distributions with spotify data,\n  find out about the central limit theorem and related statistical tests\n  and become N-dimensional whale sharks.\n\nAs it turns out this lecture got quite long.\nSo I separated two small interludes that are not\ncrucial to the bigger picture out into a bonus video.\nYou can recognize the corresponding parts of the\nscript by a prefix of [Sidenote] in the section heading.\nThey should be interesting to watch and read but\nare not required for the exercises.\n\nHere is the main lecture video:\n\n\n{{< youtube uBCsxqw2kEM >}}\n\n\n\nAnd here are the bonus bits:\n\n\n{{< youtube zGJ_Zsw8QqY >}}\n\n\n\n## Some Preparation\n\nToday, we will explore the process of modeling\nand look at different types of models.\nIn part, we will do so using the **tidymodels** framework.\nThe tidymodels framework extends the tidyverse\nwith specialized tools for all kinds of modeling tasks\nthat fit neatly in with all the tools\nwe already know. Go ahead and install them with:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/inst-tidy-models_6e80f0afdb918f71fe44f13cc4e15061'}\n\n```{.r .cell-code}\ninstall.packages(\"tidymodels\")\n```\n:::\n\n\nNow we are ready to get started\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-2_74f49aeb04a670e7d0f6f706b6c7db95'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\n```\n:::\n\n\n### [Sidenote] on Reproducible Environments with `renv`\n\n<aside>\n<a href=\"https://rstudio.github.io/renv/\">\n![](images/renv.svg){width=200}\n</a>\n</aside>\n\nAt this point, we have installed quite a lot of packages.\nOn one hand, this is great fun because the extend what we\ncan do and make tedious tasks fun.\nOn the other hand, every package that we add introduces\nwhat is called a dependency.\nIf a user doesn't have the package installed,\nour analysis will not run.\nIf we are feeling experimental and use functions\nfrom packages that are under active development and might\nchange in the future, we will run into trouble\nwhen we update the package.\nBut never updating anything ever again is no fun!\nI will show you, how to get the best of both worlds:\nAll the packages and functions that your heart desires\nwhile maintaining complete reproducibility. \nThis is to make sure that you can come back to your old\nprojects 2 years from now and they still just run\nas they did at the time.\n\nThis solution is a package called `renv`.\nThe idea is as follows:\nInstead of installing all your packages\ninto one place, where you can only have one version\nof a package at a time, `renv` installs packages\nlocally **in your project** folder.\nIt also meticulously writes down the version numbers\nof all the packages you installed and keeps a cache,\nso it will not copy the same version twice.\n\nIt is an R package like any other, so first,\nwe install it with:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/inst-renv_823e85a6acffc4189a165fe182537849'}\n\n```{.r .cell-code}\ninstall.packages(\"renv\")\n```\n:::\n\n\nThen, in our RStudio project in the R console,\nwe initialize the project to use `renv` with:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-3_15c9b8fb7df1f3f3c819fc57519063e2'}\n\n```{.r .cell-code}\nrenv::init()\n```\n:::\n\n\nThis does a couple of things.\nIt creates a file named `.Rprofile`, in which it\nwrites `source(\"renv/activate.R\")`.\nThe R-profile file is run automatically every\ntime you start a R session in this folder,\nso it makes sure `renv` is active every time\nyou open the project.\nIt also creates a folder called `renv`.\nThis is the where it will install packages\nyou want to use in the project.\nThe most important file is the `renv.lock` file.\nYou can have a look at it, it is just a text file\nwith all the packages and their exact versions.\n\nYou notice, that after initializing renv,\nwe have no packages, so for example we\ncan't load the tidyverse as usual.\nWe will have to install it again!\nHowever, in this case it should be fairly\nfast, because renv knows that it was \nalready installed globally so\nit simply copies the files,\nwhich is fast.\nAfter having installed a new package,\nwe call:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-4_08cc6ad770e49a5d8771f1de79fac224'}\n\n```{.r .cell-code}\nrenv::snapshot()\n```\n:::\n\n\nRenv tells us, what we changed in our environment\nand after we confirm, it notes down the changes.\n\nNot it is also really easy to collaborate with\nother people. Because after we send them\nour project folder, all they have to do is run:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-5_7d0e7f1b8aadd9442df1d3b73344dc00'}\n\n```{.r .cell-code}\nrenv::restore()\n```\n:::\n\n\nTo install all packages noted down in the lockfile.\nWe can also use this ourselves if we installed\na few to many packages or did an update we\nregret and want to go back\nto what is written in the lockfile.\n\nFinally, renv also provides functions to update\nor install new packages. They work like `install.packages`,\nbut a bit more versatile.\nFor example, let me show you the different\nlocations from which we can install packages.\n\n1. The main location is [CRAN](https://cran.r-project.org/)\n  (The Comprehensive R Archive Network).\n  This is also from where you installed R itself.\n  R packages on there are subject to certain standards\n  and usually stable and tested.\n2. We can also install packages directly from the source\n  code other people uploaded.\n  [GitHub](https://github.com/) is a platform where\n  you can upload code and track changes to it.\n  A lot of times, you can find the current developement\n  version of an R package, or packages that are not\n  yet on CRAN on GitHub.\n\n`renv` can install packages from GitHub as well,\nfor example let us say, we want to test out the\nlatest version of the `purrr` package to give feedback\nto the developers.\n\n<https://github.com/tidyverse/purrr> here it says:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-6_70f333cb1ecb89b85e6d5dc16ffc0fd0'}\n\n```{.r .cell-code}\n# ...\n# Or the the development version from GitHub:\n# install.packages(\"devtools\")\ndevtools::install_github(\"tidyverse/purrr\")\n```\n:::\n\n\nWell, we don't need devtools for this, because `renv` can\ndo this with the regular install function:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-7_d68bfea668e22f6f4be00aa21766ba03'}\n\n```{.r .cell-code}\nrenv::install(\"tidyverse/purrr\")\n```\n:::\n\n\nGiving  it just a package name installs a package from CRAN,\na pattern of `\"username/packgename\"` installs from GitHub.\nNow, back to the actual topic of today!\n\nAfter having initialized `renv` we need to install\nthe packages that we need for the project even\nif we already have them in our global package cache,\njust so that `renv` knows about them.\n\n## All models are wrong, but some are useful\n\n> _\"All models are wrong, but some are useful\"_\n> --- George Box\n\nWhat this means is that any model is but a simplification\nof reality and must always omit details.\nNo model can depict the complete underlying\nreality. However, models are useful, and to\nunderstand what they are useful for, we must first look at\nthe different types of models out there.\n\n### Types of Models\n\n<aside>\n<a href=\"https://www.tidymodels.org/\">\n![](images/tidymodels.svg){width=200}\n</a>\n</aside>\n\nThe [tidymodels book](https://www.tmwr.org/software-modeling.html#types-of-models)\nnames three types of models,\nwhere any particular model can fall into multiple\ncategories at once:\n\n1. **Descriptive Models**\\ \n  are purely used to describe the underlying\n  data to make patters easier to see.\n  When we add a smooth line to a ggplot\n  with `geom_smooth`, the default method is a so called LOESS curve,\n  which stands for Locally Estimated Scatterplot Smoothing.\n  It does produce insights  by revealing patterns to us,\n  but by itself can not be used  e.g. to make predictions.\n  It is just a pretty looking smooth line.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-8_d59415c708b0a88a269f1ddd8ed8d7ca'}\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-8-1.png){width=20%}\n:::\n:::\n\n\n2. **Inferential Models**\\ \n  are designed to test hypothesis or\n  make decisions. They rely heavily on\n  our assumptions about the data\n  (e.g. what probability distribution\n  the populations follows) and will\n  be most likely encountered by you\n  to answer research questions.\n  They are the models that typically\n  produce a p-value, which you compare\n  to a threshold like we did last week.\n\n3. **Predictive Models**\\ \n  are designed to process the data we\n  have and make predictions about\n  some response variable upon receiving\n  new data. When done correctly,\n  we also hold out on some of the data\n  that our model never gets to see,\n  until it is time to evaluate and\n  test how it performs on unseen data.\n  Depending on how much we know\n  (or want to know) about the\n  underlying processes, we differentiate\n  between **mechanistic** models like\n  fitting a physically meaningful\n  function to data and **empirically driven** models, which are mainly\n  concerned with creating good\n  predictions, no matter the underlying\n  mechanism.\n\nWe will now explore different examples.\nFirst, let me introduce our dataset for today:\n\n\n## Say Hello to Spotify Data\n\nI created a playlist on spotify,\nwhich is quite diverse so that we can\nlook at a range of features. You can\neven listen to it [here](https://open.spotify.com/playlist/2Ljg7QjvftQ7qNbGiM2Qzd?si=_DqZqE1xTmKoFqp898cftA) while you do the\nexercises if you want. I am doing so, as I write\nthis. The cool thing about spotify is,\nthat they have an API, an Application Interface. APIs are ways for\ncomputer programs to talk to each other.\nSo while we use the spotify app to look up songs, computers\nuse the API to talk to the spotify server.\nAnd because R has a rich ecosystem of packages,\nsomeone already wrote a package that allows R to talk to\nthis API: [`spotifyr`](https://www.rcharlie.com/spotifyr/index.html).\n\nIf you check out the R folder in this lecture,\nyou can see how I downloaded and processed that data about\nthe playlist. Note that the script will not work for you\nright away, because you first need to register\nwith spotify as a developer and then get a so called token,\nlike a username and password in one long text, to be allowed\nto send bots their way.\nYou probably just want to download the data from\nmy github repository.\n\nLet's have a look, shall we?\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-9_2e61d613c285f2922f5d45893a168ba5'}\n\n```{.r .cell-code}\nsongs <- read_csv(\"data/06/spotify_playlist.csv\")\n```\n:::\n\n\nWe can get a quick overview of all columns with:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-10_93139bd034bc9683abe3d9fb897578c6'}\n\n```{.r .cell-code}\nglimpse(songs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 393\nColumns: 18\n$ track_name        <chr> \"Africa\", \"Take on Me\", \"Wake Me Up Before You Go-Go…\n$ track_artists     <chr> \"TOTO\", \"a-ha\", \"Wham!\", \"Elton John\", \"The HU;Jacob…\n$ danceability      <dbl> 0.671, 0.573, 0.620, 0.504, 0.373, 0.624, 0.789, 0.7…\n$ energy            <dbl> 0.373, 0.902, 0.573, 0.904, 0.895, 0.857, 0.789, 0.6…\n$ key               <dbl> 9, 6, 0, 6, 8, 10, 2, 4, 4, 6, 6, 4, 4, 11, 10, 10, …\n$ loudness          <dbl> -18.064, -7.638, -11.893, -6.863, -3.846, -6.250, -4…\n$ mode              <dbl> 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1…\n$ speechiness       <dbl> 0.0323, 0.0540, 0.0423, 0.1790, 0.0610, 0.0542, 0.29…\n$ acousticness      <dbl> 0.257000, 0.018000, 0.271000, 0.356000, 0.022100, 0.…\n$ instrumentalness  <dbl> 8.01e-05, 1.25e-03, 0.00e+00, 1.21e-01, 2.45e-04, 2.…\n$ liveness          <dbl> 0.0481, 0.0928, 0.0607, 0.1400, 0.6610, 0.1100, 0.09…\n$ valence           <dbl> 0.7320, 0.8760, 0.8970, 0.7720, 0.6680, 0.3240, 0.37…\n$ tempo             <dbl> 92.718, 84.412, 81.548, 176.808, 172.392, 131.926, 1…\n$ time_signature    <dbl> 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4…\n$ track_duration_ms <dbl> 295893, 225280, 231333, 183440, 317077, 282920, 2480…\n$ track_popularity  <dbl> 82, 84, 79, 80, 57, 60, 74, 84, 84, 82, 82, 81, 81, …\n$ track_uri         <chr> \"spotify:track:2374M0fQpWi3dLnB54qaLX\", \"spotify:tra…\n$ track_year        <dbl> 1982, 1985, 1984, 1983, 2020, 2019, 2019, 2015, 2015…\n```\n:::\n:::\n\n\nFinally some decent numbers!\nNot just these measly discrete values\nwe had last week.\nFor each song in the playlist, we get the artist,\nthe year it arrived and a number of features like\nhow danceable, how loud or fast the song is.\nYou can easily imagine spotify using these\nnumbers to suggest new songs based on the features\nof those that you have listened to.\nAnd in fact, we are going to lay the foundations\nfor such an algorithm today.\n\n## Visualising Continuous Distributions\n\nWhen dealing with a continuous distribution,\nlike we have for a lot of our features in the spotify\nsongs dataset, there are always multiple\nways to represent the same data. \nFirst, we just look at the numbers. We will\nuse the `valence` values for our songs:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-11_2c112cfd5ef0e01d763799d015f64712'}\n\n```{.r .cell-code}\nhead(songs$valence)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.732 0.876 0.897 0.772 0.668 0.324\n```\n:::\n:::\n\n\nNotice anything interesting in the numbers?\nI don't either.\nOur brain is way better suited for looking at graphical representations,\nso:\n**To the ggplot cave**!\n\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-12_6c584cc3a39f7a97aede6df292cdeea4'}\n\n```{.r .cell-code}\nsongs %>% \n  ggplot(aes(x = \"\", y = valence)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-12-1.png){width=100%}\n:::\n:::\n\n\nThis is kind of hard to see, because points overlap.\nWe can get a better picture of the distribution\nby using transparency or a bit of jitter:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-13_6509e69db602c87631fb4e2ff2d15cd8'}\n\n```{.r .cell-code}\nsongs %>% \n  ggplot(aes(x = \"\", y = valence)) +\n  geom_jitter(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-13-1.png){width=100%}\n:::\n:::\n\n\nUsing a histogram, we can put the points into bins\nand get a plot similar to what we got for discrete values.\nNote that the plot is flipped on it's side now.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-14_bab839d9578085df6b8c18a1ebaa1ded'}\n\n```{.r .cell-code}\nsongs %>% \n  ggplot(aes(valence)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-14-1.png){width=100%}\n:::\n:::\n\n\nAnd we might want to play around with the bin size to\nget a better feel for the distribution.\nAnother way is to apply a smoothing function\nand estimate the density of points along a continuous\nrange, even in places where we originally had no points:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-15_b34d363b5bb9d543ec1c4a57c5f32d1a'}\n\n```{.r .cell-code}\nsongs %>% \n  ggplot(aes(valence)) +\n  geom_density(fill = \"midnightblue\", alpha = 0.6)\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-15-1.png){width=100%}\n:::\n:::\n\n\nBoth of these plots can be misleading, if the original\nnumber of points is quite small, and in most cases,\nwe are better off, showing the actual individual\npoints as well. This is the reason, why the first plots\nI did where vertical, because there is a cool way\nof showing both the points and the distribution,\nwhile still having space to show multiple\ndistributions next to each other.\nImagine taking the density plot, turning it 90 degrees\nand then mirroring through the middle.\nWhat we get is a so called **violin plot**.\nTo overlay the points on top, we will use something\na little more predictable than `jitter` this time:\nFrom the `ggbeeswarm` package I present: `geom_quasirandom`.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-16_921ca76737b509add0efd864f2e0d781'}\n\n```{.r .cell-code}\nsongs %>% \n  ggplot(aes(x = \"\", y = valence)) +\n  geom_violin(fill = \"midnightblue\", alpha = 0.6) +\n  ggbeeswarm::geom_quasirandom(width = 0.35)\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-16-1.png){width=100%}\n:::\n:::\n\n\nThis is cool, because now we can easily\ncompare two different distributions\nnext to each other and still see all the individual\npoints.\nFor example, we might ask:\n\n> \"Do songs in major cord have a higher valence than\n  songs in minor cord in our dataset?\"\n\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-17_2098724712a0e19959d988a00bffb2c7'}\n\n```{.r .cell-code}\nsongs %>% \n  filter(!is.na(mode), !is.na(valence)) %>% \n  ggplot(aes(x = factor(mode), y = valence)) +\n  geom_violin(fill = \"midnightblue\", alpha = 0.6) +\n  ggbeeswarm::geom_quasirandom(width = 0.35) +\n  scale_x_discrete(labels = c(`0` = \"minor\", `1` = \"major\"))\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-17-1.png){width=100%}\n:::\n:::\n\n\n> **Note**: This jittering only works, because the\n  feature on the x-axis is discrete. If it where continuous,\n  we would be changing the data by jittering on the x-axis.\n\nWe might also want to add summaries like the mean for each\ngroup to the plot with an additional marker.\nThis leads us to the general concept of **summary statistics**.\nThere is a number of them, and they can be quite useful\nto, well, summarise a complex distribution.\nBut they can also be very misleading, as can any simplification be.\n\n## Summary Statistics...\n\n## Mean, Median (and other Quartiles), Range\n\nLet us start by considering different things we\ncan say about our distribution in one number.\nFirst, we might look at the range of our numbers,\nthe maximum and minimum.\nWe will do this per mode, so we can compare the values.\nNext, we want to know the centers of the points.\nThere are different notions of being at the center\nof the distribution.\nThe **mean** or *average* is the sum of all values \ndivided by the number of values.\nThe **median** is what we call a quantile, a point that\ndivides a distribution in equally sized parts,\nspecifically such that 50% values are below and 50%\nare above the median.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-18_d8321f137293819031d88a94e725a041'}\n\n```{.r .cell-code}\nsongs %>% \n  drop_na(valence, mode) %>% \n  group_by(mode) %>% \n  summarise(\n    min = min(valence),\n    max = max(valence),\n    mean = mean(valence),\n    median = median(valence)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n   mode    min   max  mean median\n  <dbl>  <dbl> <dbl> <dbl>  <dbl>\n1     0 0.0271 0.966 0.448  0.447\n2     1 0.0258 0.965 0.475  0.477\n```\n:::\n:::\n\n\nIt appears the valence can assume values between 0 and 1.\nA shortcut for this is the `range` function:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-19_17818e42a4b2da480569734c675b49e1'}\n\n```{.r .cell-code}\nrange(songs$valence)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA NA\n```\n:::\n:::\n\n\nThe median is just one of the many percentiles\nwe can think of. If we display the 50th as\nwell as the 25th and 75th percentile on one plot,\nwe get what is called a boxplot:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-20_e18020e8ddfedbe94caf426cbd863239'}\n\n```{.r .cell-code}\n# in the lecture I used filter(!is.na(mode), !is.na(valence)),\n# but drop_na is more elegant.\n\nsongs %>% \n  drop_na(valence, mode) %>% \n  ggplot(aes(x = factor(mode), y = valence)) +\n  geom_boxplot(fill = \"midnightblue\", alpha = 0.6, outlier.color = NA) +\n  ggbeeswarm::geom_quasirandom(width = 0.35) +\n  scale_x_discrete(labels = c(`0` = \"minor\", `1` = \"major\"))\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-20-1.png){width=100%}\n:::\n:::\n\n\nThe \"whiskers\" of the box extend to 1.5 times the box size or to the\nlast data point, whichever makes smaller whiskers.\nPoints that are more extreme than the whiskers are\nlabeled outliers by the boxplot and usually displayed as\ntheir own points. Like with the violin plot,\nwe also have the option to plot the original un-summarized\npoints on top. In this case, we need to make sure\nto change the outlier color for the boxplot to\n`NA`, because otherwise we are plotting them twice.\n\nThis hints at one downside of boxplots\n(when used without adding the raw datapoints as well):\nThe box is a very prominent focus point\nof the plot, but by definition,\nit only contains 50% of all datapoints.\nThe rest is delegated to thin whiskers.\n\n### Variance\n\nFinally, we want to know, how far the values\nscatter around their means and the potential\npopulation mean. This is encompassed\nin two closely related measures: the **variance**\nand the **standard deviation**.\n\nFor illustrative purposes, we can plot all datapoints\nfor e.g the valence in the order in which they appear in the data\nand add a line for the mean.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/valence-mean_5642f08dd9a42c98941731a16674408b'}\n\n```{.r .cell-code}\nsongs %>%\n  filter(!is.na(valence)) %>% \n  mutate(index = 1:n()) %>% \n  ggplot(aes(index, valence)) +\n  geom_segment(aes(y = mean(valence),\n                   yend = mean(valence),\n                   x = 0,\n                   xend = length(valence))) +\n  geom_segment(aes(xend = index, yend = mean(valence)),\n               color = \"darkred\", alpha = 0.6) +\n  annotate(x = length(songs$valence),\n           y = mean(songs$valence, na.rm = TRUE),\n           label = \"Mean\",\n           geom = \"text\") +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/valence-mean-1.png){width=100%}\n:::\n:::\n\n\n> The variance is the expected value of the squared deviation\n  of a random variable from its mean.\n\nIn other words: Take the distance of all points\nto the mean and sum them (add all red lines in the plot\nabove together) and then divide by $n-1$.\n\n$$var(X) = \\frac{\\sum_{i=0}^{n}{(x_i-\\bar x)^2}}{(n-1)}$$\n\n\"Hang on!\", I hear you saying: \"Why $n-1$?\".\nAnd it is an excellent question. The first\nstatement talked about an expected value.\n(One example of an expected value is the mean,\nwhich is the expected value of... well, the values).\nAnd indeed, and expected value often has\nthe term $1/n$. But the statement was talking\nabout the expected value (of the squared deviation)\nfor **the whole population**.\nWe can only use the uncorrected version when we\nhave the whole population (e.g. all songs that ever existed)\nand want to talk about that population.\nBut usually, all we have is a **sample**, from\nwhich we want to draw conclusions about the population.\nBut when we are using the sample to estimate\nthe variance of the population, it will be biased.\nWe can correct for this bias by using $n-1$ instead\nof $n$.\nThis is known as Bessel's correction.\nI am yet to come by a really intuitive explanation,\nbut here is one idea: The thing we are dividing\nby is not necessarily the sample size any time\nwe want to try to calculate the expected\nvalue of an estimator, it just happens to be the\nsample size in a bunch of cases.\nWhat the term really represents here is the\n**degrees of freedom** (DF) of the deviations.\nDFs can be thought of as the number of independent things.\nThe degrees of freedom are $n$ reduced by $1$, because\nif we know the mean of a sample (we use it in our\ncalculation), once we know all but $1$\nof the individual values, the last value is automatically\nknown and thus doesn't count towards the degrees of freedom.\n\n### Standard deviation\n\nNext up: The **Standard Deviation** (SD) is the square root\nof the variance. Which is more commonly used on error\nbars, because the square root inverts the squaring that\nwas done to get the variance. So we are back\nin the dimensions of the data.\n\n$$\\sigma_X=\\sqrt{var(X)}$$\n\n### Standard Error of the Mean\n\nFinally, we have the **Standard Error of the Mean**,\nsometimes only called Standard Error (SEM, SE).\nIt is also used very commonly in error bars.\nThe reason for a lot of people to favor it over\nthe SD might just be, that it is smaller,\nbut they have distinct use-cases.\n\n$$SEM=\\sigma / \\sqrt{n}$$\n\nWe take the standard deviation and divide it\nby the square-root of $n$. Imagine this:\nWe actually have the whole population available.\nLike for example all penguins on earth.\nAnd then we repeatedly take samples of\nsize $n$. The means of these individual samples\nwill vary, so it will have it's own mean,\nstandard deviation and variance. The\nstandard error is the standard deviation of these means.\nSo it is a measure of how far the means of repeated samples\nscatter around the true population mean.\nHowever, we don't usually have the whole population!\nMeasuring some property of all penguins in the\nworld takes a long time, and running\nan experiment in the lab for all cells that exist\nand will ever exist takes an infinite amount of\ntime. This is probably more than our research grant\nmoney can finance.\nSo, instead, the Standard Error of the Mean\nused the standard deviation of our sample in\nthe formula above. It is our best estimate\nfor the standard deviation of the whole population.\nSo, when you are trying so make inferences\nabout the mean of the whole population based on your sample,\nit makes sense to also give the SEM as a way of\nquantifying the uncertainty.\n\nWhile R has functions for `sd`, `mean` and `var`,\nthere is not built in function for the `sem`,\nbut we can easily write one ourselves:\n\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-21_b1dfa45d54e6df81a2787ca809c36915'}\n\n```{.r .cell-code}\nsem <- function(x) sd(x) / sqrt(length(x))\n```\n:::\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-22_d25027da9391ee42f3eb62c331427c4c'}\n\n```{.r .cell-code}\nsongs %>% \n  drop_na(mode, valence) %>% \n  group_by(mode) %>% \n  summarise(\n    mean = mean(valence),\n    var = var(valence),\n    sd = sd(valence),\n    sem = sem(valence)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n   mode  mean    var    sd    sem\n  <dbl> <dbl>  <dbl> <dbl>  <dbl>\n1     0 0.448 0.0498 0.223 0.0170\n2     1 0.475 0.0653 0.255 0.0182\n```\n:::\n:::\n\n\n## ... or: How to Lie with Graphs\n\nHowever, be very wary of simple bar graphs with error bars;\nthere is a lot that can be misleading about them.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/horrible-plot_620e2964c35cea9ade0460fabe984afc'}\n\n```{.r .cell-code}\nsongs %>% \n  drop_na(speechiness, mode) %>% \n  group_by(mode) %>%\n  summarise(across(speechiness, list(m = mean, sd = sd, sem = sem))) %>% \n  ggplot(aes(factor(mode), speechiness_m, fill = factor(mode))) +\n  geom_errorbar(aes(ymin = speechiness_m - speechiness_sem,\n                    ymax = speechiness_m + speechiness_sem,\n                    color = factor(mode)),\n                size = 1.3, width = 0.3, show.legend = FALSE) +\n  geom_col(size = 1.3, show.legend = FALSE) +\n  coord_cartesian(ylim = c(0.06, 0.08)) +\n  scale_fill_manual(values = c(\"#1f6293\", \"#323232\")) +\n  scale_color_manual(values = c(\"#1f6293\", \"#323232\")) +\n  labs(title = \"Don't Do This at Home!\",\n       y = \"Speechiness\",\n       x = \"Mode (Minor / Major)\") +\n  theme(\n    plot.title = element_text(size = 44, family = \"Daubmark\",\n                              color = \"darkred\")\n  )\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/horrible-plot-1.png){width=100%}\n:::\n:::\n\n\nWhen people say \"The y-axis has to include 0\",\nthis is the reason for it. It is no always true,\nwhen there is another sensible baseline that is not 0,\nbut especially for barplots not having the y-axis start\nat 0 is about the most misleading thing you can do.\nThe main reason for this is that humans perceive\nthe height of the bars via their area,\nand this is no longer proportional when the bars\ndon't start at 0.\nThis plot also makes no indication of the type of\nerror-bars used or the sample size in each group.\nIt uses the `speechiness` feature, but it hides the\nactual distribution behind just 2 numbers\n(mean and SEM) per group.\n\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-23_938ba40cb0859d479c3614563ef70fbb'}\n\n```{.r .cell-code}\nsongs %>% \n  ggplot(aes(speechiness, color = factor(mode), fill = factor(mode))) +\n  geom_density(alpha = 0.3)\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-23-1.png){width=100%}\n:::\n:::\n\n\nSo the next time you see a barplot ask the question:\n\n![Summary statistics by @ArtworkAllisonHorst](images/summary_statistics.png)\n\nI hope you can take some inspiration from\nthis chapter and now have the vocabulary to\nknow where to look when it comes to your own data.\n\n## Graphic Devices, Fonts and the ggplot Book\n\n\n### ggplot book\n\nFirstly, for all things `ggplot`, the third edition\nof the **ggplot book** is currently being worked on\nby three absolute legends of their craft\n[@WelcomeGgplot2; @wickhamGgplot2ElegantGraphics2016].\n[Hadley Wickham](http://hadley.nz/) is the author of the original ggplot and\nggplot2 package, [Danielle Navaro](https://djnavarro.net/)\nmakes amazing artwork\nwith and teaches ggplot and\n[Thomas Lin Pedersen](https://www.data-imaginist.com/about)\nis the current maintainer of ggplot2 and constantly\nmakes cool features for it.\nThe under-development book is already available online\nfor free: <https://ggplot2-book.org/>.\n\n### [Sidenote] Graphics Devices\n\nSecondly, we need to briefly talk about a concept\nwe have only brushed by: **graphics devices** are\nto R what your printer is to your computer.\nWhen we create a plot in R, it starts out as mere numbers,\nbut something has to turn these numbers into\npixels (in the case of raster-images) or vectors\n(in the case of vector images; you might know svg or pdf files.\nSorry, but these are not the vectors in R but rather\ndescriptions of lines).\nThis is the job ob the graphics device.\nWhen we use the `ggsave` function for example,\nit figures out what to use based on the file extension,\nbut we can also specify it manually.\nI am mentioning this here, because\nin the plot I just showed you, I used a different font\nthan the default. This is something that can be\nincredibly tricky for graphics devices,\nbecause fonts are handled differently on every operating\nsystem. Luckily, it is about to get way easier,\nbecause Thomas Lin Pedersen is working on another\npackage, a graphics device, that is both really\nfast and works well with fonts.\nYou can check the current development version here:\n<https://ragg.r-lib.org/>\n\nHere are some examples of using graphics devices manually\nby opening the device first and then finalizing the plot\nby closing the device:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-24_06ee0797101ecc286d214ac31b809bf3'}\n\n```{.r .cell-code}\npng(\"myplot.png\")\n\nsongs %>% \n  ggplot(aes(speechiness, color = factor(mode), fill = factor(mode))) +\n  geom_density(alpha = 0.3)\n\ndev.off()\n```\n:::\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-25_7f319452067c14813f6d4e3892b7f792'}\n\n```{.r .cell-code}\nsvg(\"myplot.svg\")\n\nsongs %>% \n  ggplot(aes(speechiness, color = factor(mode), fill = factor(mode))) +\n  geom_density(alpha = 0.3)\n\ndev.off()\n```\n:::\n\n\nOr by manually specifying the device in `ggsave`.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-26_57bbf70b2a914f722f768476d9fc05f7'}\n\n```{.r .cell-code}\nplt <- songs %>% \n  ggplot(aes(speechiness, color = factor(mode), fill = factor(mode))) +\n  geom_density(alpha = 0.3)\n\nggsave(\"newplot.png\", plt, device = ragg::agg_png)\n```\n:::\n\n\n## The Normal Distribution and the Central Limit Theorem\n\nThere are many different distributions out there.\nLuckily, one of them is quite special and can\nbe used in a multitude of settings.\nIt is the harmlessly named **Normal Distribution**.\nR has the usual functions for it (density,\nprobability, quantile, random).\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-27_18ec0b8d9b768caedf821fb08dcdc2db'}\n\n```{.r .cell-code}\ntibble(x = seq(-3, 3, 0.01)) %>% \n  ggplot(aes(x)) +\n  geom_function(fun = dnorm) +\n  stat_function(geom = \"area\", fun = dnorm,\n              fill = \"darkblue\", alpha = 0.3) +\n  labs(y = \"density\", title = \"Normal Distribution Density\")\n\ntibble(x = seq(-3, 3, 0.01)) %>% \n  ggplot(aes(x)) +\n  geom_function(fun = pnorm) +\n  labs(y = \"probability\", title = \"Cummulative Probability\")\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-27-1.png){width=50%}\n:::\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-27-2.png){width=50%}\n:::\n:::\n\n\nNow, why is is distribution so special?\n\n> The **Central Limit Theorem** (CLT) states that the\n  sample mean of a sufficiently large number\n  of independent random variables is approximately\n  normally distributed.\n  The larger the sample, the better the approximation.\n\nFor a great visualization of the central limit\ntheorem, check out this interactive tutorial by\n[Seeing Theory](https://seeing-theory.brown.edu/probability-distributions/index.html#section3).\n\nBecause a lot of values we measure are actually the\nsum of many random processes, distributions of things\nwe measure can often be approximated with a normal distribution.\n\nWe can visually test if some values follow the normal\ndistribution by using a quantile-quantile plot,\nwhich plots the quantiles of our sample against\nwhere the quantiles should be on the normal distribution.\nA straight line means it is perfectly normal.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-28_e1d9d8e4ca4f5140673a6e0935a2c74f'}\n\n```{.r .cell-code}\nqqnorm(songs$valence)\nqqline(songs$valence, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-28-1.png){width=100%}\n:::\n:::\n\n\nThe values close to the mean are pretty normal,\nbut the tails of the distribution stray further\nfrom the normal distribution. There are way more\nvery small and very large values than would\nbe expected from a normal distribution.\n\n### Log-normality\n\nThere is one thing that comes up a lot in biological data:\nbecause a lot of processes in biology are reliant on\nsignal cascades, they tend to be the result of many\nmultiplicative effects, rather than additive effects,\nas would be required for the Central Limit Theorem.\nAs a result, they are not distributed normally,\nbut rather log-normally,\nbecause taking the logarithm of all values\ntransforms multiplicative effects into additive effects!\n\n## The T-Distribution\n\nThe CLT is only valid for **large sample sizes**.\nFor smaller sample sizes, the distribution of\nmeans has fatter tails than a normal distribution.\nThis is why for most statistical tests,\nwe use the **t-distribution** instead of the\nnormal distribution.\nAs the degrees of freedom get higher, the\nt-distribution approaches the normal distribution.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/tdist_9cc3ccb1093455630eb8606952dc5c25'}\n\n```{.r .cell-code}\nbase <- ggplot() + xlim(-5, 5)\n\nbase +\n  geom_function(aes(colour = \"t, df = 1\"), fun = dt, args = list(df = 1), size = 1.2) +\n  geom_function(aes(colour = \"t, df = 3\"), fun = dt, args = list(df = 3), size = 1.2) +\n  geom_function(aes(colour = \"t, df = 30\"), fun = dt, args = list(df = 30), size = 1.2) +\n  geom_function(aes(colour = \"normal\"), fun = dnorm, size = 1.2) +\n  guides(color = guide_legend(title = \"\")) +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![t-distributions; normal distribution in black.](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/tdist-1.png){width=100%}\n:::\n:::\n\n\nRemember the valence plot by mode?\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-29_040bb16d5d364351869fb7f4df7cbc1e'}\n\n```{.r .cell-code}\nsongs %>% \n  ggplot(aes(factor(mode), valence)) +\n  geom_violin(fill = \"darkblue\", alpha = 0.3) +\n  ggbeeswarm::geom_quasirandom(alpha = 0.6)\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-29-1.png){width=100%}\n:::\n:::\n\n\nFor our purposes we are going to treat these two distributions\nas close enough to a normal distribution at first\nso that we can look at some hypothesis tests:\n\n## Student's T-Test\n\nThe first test is called student's t-test. \"Student\"\nwas the pseudonym of it's inventor. And the \"t\" stands\nfor the t-distribution. We can use it to test\nthe null hypothesis, that two samples come from the\nsame (approximately normal) distribution.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-30_0453f9956203d0e8108b1f784e0e2b60'}\n\n```{.r .cell-code}\nt.test(valence ~ mode, data = songs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  valence by mode\nt = -1.0857, df = 365.99, p-value = 0.2783\nalternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0\n95 percent confidence interval:\n -0.07614235  0.02197185\nsample estimates:\nmean in group 0 mean in group 1 \n      0.4480163       0.4751015 \n```\n:::\n:::\n\n\nThe two samples are so similar that is is quite likely for those\nvalues to have come form the same distribution, so we would not\nreject the null hypothesis.\n\nLet us pretend for a moment that there is in fact a \ndifference by creating some fake data (don't do this in the lab...).\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-31_33b9ef11c7c8bd43b15c5ea40764833b'}\n\n```{.r .cell-code}\nfake_songs <- songs %>% \n  drop_na(mode, valence) %>% \n  mutate(valence = if_else(mode == 1, valence + 0.2, valence))\n```\n:::\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-32_63be66660168f45b5eb327227712b463'}\n\n```{.r .cell-code}\nfake_songs %>% \n  ggplot(aes(valence, color = factor(mode), fill = factor(mode))) +\n  geom_density(alpha = 0.3)\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-32-1.png){width=100%}\n:::\n:::\n\n\nNow we end up with a statistically significant p-value.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-33_909e43510d9d5dc3f4f9aca25e7f9c56'}\n\n```{.r .cell-code}\nt.test(valence ~ mode, data = fake_songs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  valence by mode\nt = -9.1028, df = 365.99, p-value < 2.2e-16\nalternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0\n95 percent confidence interval:\n -0.2761424 -0.1780282\nsample estimates:\nmean in group 0 mean in group 1 \n      0.4480163       0.6751015 \n```\n:::\n:::\n\n\nNote, that the p-value itself says nothing about the effect size,\nthe difference in means between the sample.\nYou can get a significant p-value either by showing a tiny\ndifference with lot's of data points or by showing a larger\ndifference with less data points.\n\nTests, that rely on the assumption of normality\nare called **parametric tests**, but when this\nassumption can not be met, we need **non-parametric tests**.\n\n## Wilcoxon rank-sum test\n\nThe Wilcoxon rank-sum test, or\nMann–Whitney U test, is one of these.\nI get's around the assumption of normality by\ntransforming the data into **ranks** first.\ni.e. all points (independent of group) are\nordered and their values replaced by their\nposition in the ordering (their rank).\nIf we think of the t-test as testing for a\ndifference in means, we can think of the\nWilcoxon rank-sum test as testing for a difference\nin medians.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-34_378947c2d95b8071987e2a5776ea7ee5'}\n\n```{.r .cell-code}\nx <- c(1, 3, 2, 42, 5, 1000)\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]    1    3    2   42    5 1000\n```\n:::\n\n```{.r .cell-code}\nrank(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 3 2 5 4 6\n```\n:::\n:::\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-35_2511c8bbf6e0b500f74a72a68b461508'}\n\n```{.r .cell-code}\nwilcox.test(valence ~ mode, data = songs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWilcoxon rank sum test with continuity correction\n\ndata:  valence by mode\nW = 15834, p-value = 0.3155\nalternative hypothesis: true location shift is not equal to 0\n```\n:::\n:::\n\n\n### Direction of Testing\n\nBoth tests have the argument `alternative`,\nwhich can be any of `c(\"two.sided\", \"less\", \"greater\")`.\nThis is the direction of our alternative hypothesis.\nAre we testing, for x being greater or less than y?\nOr are we testing for a difference in any direction (the default)?\nHaving a hypothesis about the direction beforehand will\nresult in smaller p-values (half of the two-sided ones),\nbut you need to have this hypothesis before looking at\nthe data, and especially not after running e.g. the\ntwo sided test and then deciding, that you want a\nsmaller p-value! This is not how p-values work.\n\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-36_f1d2fb929b884662402c05e0bd304d83'}\n\n```{.r .cell-code}\nt.test(valence ~ mode, data = fake_songs, alternative = \"less\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  valence by mode\nt = -9.1028, df = 365.99, p-value < 2.2e-16\nalternative hypothesis: true difference in means between group 0 and group 1 is less than 0\n95 percent confidence interval:\n       -Inf -0.1859473\nsample estimates:\nmean in group 0 mean in group 1 \n      0.4480163       0.6751015 \n```\n:::\n:::\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-37_377e876390204ac730d03dd99fb077e1'}\n\n```{.r .cell-code}\nfake_songs %>% \n  ggplot(aes(valence, color = factor(mode), fill = factor(mode))) +\n  geom_density(alpha = 0.3)\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-37-1.png){width=100%}\n:::\n:::\n\n\nIf you are unsure about how to tell the functions,\nwhich of two groups is supposed to be greater or lesser,\nyou can also supply the data as `x` and `y` instead\nof using the formula interface as I did above:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-38_74a1d9b91f64d26216e646b8acd87756'}\n\n```{.r .cell-code}\nvalence_major <- fake_songs %>% filter(mode == 1) %>% pull(valence)\nvalence_minor <- fake_songs %>% filter(mode == 0) %>% pull(valence)\n\nt.test(valence_major, valence_minor, alternative = \"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  valence_major and valence_minor\nt = 9.1028, df = 365.99, p-value < 2.2e-16\nalternative hypothesis: true difference in means is greater than 0\n95 percent confidence interval:\n 0.1859473       Inf\nsample estimates:\nmean of x mean of y \n0.6751015 0.4480163 \n```\n:::\n:::\n\n\nIf we save the result of the test, we can inspect the object\nfurther and extract information from it.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-39_b0a46234b7ab8537fa72f705765c5470'}\n\n```{.r .cell-code}\ntest <- t.test(valence_major, valence_minor, alternative = \"greater\")\ntest$p.value\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.893211e-18\n```\n:::\n:::\n\n\n### Confidence Intervals\n\nThe t.test on a lonely sample can also be used to create confidence intervals\naround a mean. In short for example a 95% confidence\ninterval is the range in which we would expect the mean\nof a sample to fall in 95% of cases when we repeat\nan experiment an infinite amount of times.\nThese confidence intervals are also sometimes\nused as error bars in plots.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-40_6ebe6a16a1ffbaa4ec6af3100ef5b7a7'}\n\n```{.r .cell-code}\ntest <- t.test(songs$valence)\ntest$conf.int\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.4377443 0.4871400\nattr(,\"conf.level\")\n[1] 0.95\n```\n:::\n:::\n\n\n## Chrunching Dimensions with Dimensionality Reduction: PCA\n\nLastly for today, we are going a bit out of scope.\nWe are leaving the realm of looking at individual\nfeatures and try to condense all the information\ninto as little space as possible.\n\nThe general notion of Dimensionality Reduction is to\ntake all the features that we have and construct new\nfeatures from them, so that we can represent our data\nwith fewer features while loosing little information.\n\nFor example, when two features are highly correlated\ni.e. one changes when the other does,\nwe might be better off replacing them with a single\nnew feature, that goes along\nthe axis of maximum variance between the two.\nA number along this line accounts for most of the\nvariance in these points, and the rest can\nbe accounted for by a number describing the distance\nto that line (a perpendicular axis), which\nis less important than the first axis we found.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-41_47fb08bb9fb1c5950cc111a1d0025771'}\n\n```{.r .cell-code}\nsongs %>% \n  ggplot(aes(x = energy,\n             y = loudness,\n             label = track_name)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-41-1.png){width=100%}\n:::\n:::\n\n\nImagine you are whale shark!\n\n![Whale shark by @ArtworkAllisonHorst](images/whaleshark.png)\n\n\nAnd want to orient your mouth in such a way\nthat you can eat the greatest amount of krill\nin one sweep.\n\n![Krill by @ArtworkAllisonHorst](images/krill.png)\n\nThis is your first principal component. The\nsecond is perpendicular to the first.\nThis is a throwback to \"Math for Natural Scientists\" and linear\nalgebra, we are defining a new coordinate system here.\n\nBut whale sharks swim in 3 dimensions, not 2,\nand our data has even more dimensions, with features\nbeing represented dimensions.\n\n> It can be quite hard for humans to imaging being an\n  N-dimensional whale shark.\n\nBut R and tidymodels has us covered.\n\nPCA is not a model in itself, but rather a data preprocessing\nstep that generates new features (the principal components),\nwhich we can later use for other models.\nBut today, we will do just the preprocessing by itself.\n\nIn tidymodels, preprocessing is done by defining a\n**recipe**:\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-42_360a5a9fd74b6d7eb6a7a1d5c8b27521'}\n\n```{.r .cell-code}\nsongs_rec <- recipe( ~ ., data = songs) %>% \n  update_role(track_name, track_artists, track_uri, new_role = \"id variable\") %>% \n  step_naomit(all_predictors()) %>% \n  step_normalize(all_predictors()) %>% \n  step_pca(all_predictors(), id = \"pca\")\n\nsongs_rec\n```\n:::\n\n\nWe then take the recipe and **prepare** it.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-43_f28e5010b81d7d0e98973f6300c396e4'}\n\n```{.r .cell-code}\nsongs_prep <- prep(songs_rec)\nsongs_prep\n```\n:::\n\n\nWe can now explore, how the data looks like in these\nnew dimensions. We do so, by **baking** the\nprepared recipe.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-44_8777a5ce5ea36c172ab67df1bc419d68'}\n\n```{.r .cell-code}\nsongs_baked <- bake(songs_prep, songs)\nsongs_baked\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 393 × 8\n   track_name      track_artists track_uri    PC1    PC2     PC3     PC4     PC5\n   <fct>           <fct>         <fct>      <dbl>  <dbl>   <dbl>   <dbl>   <dbl>\n 1 Africa          TOTO          spotify:…  1.21  -3.32  -0.808   0.0396  0.811 \n 2 Take on Me      a-ha          spotify:… -1.43  -1.84  -0.680  -0.400   0.376 \n 3 Wake Me Up Bef… Wham!         spotify:…  0.257 -3.23   0.397   0.242  -1.09  \n 4 I'm Still Stan… Elton John    spotify:… -1.08  -1.21   1.61    1.76    1.24  \n 5 Wolf Totem (fe… The HU;Jacob… spotify:… -1.71   1.26   2.24   -1.74    1.47  \n 6 Yuve Yuve Yu    The HU        spotify:… -0.774  0.792 -1.31   -0.446   0.743 \n 7 The Search      NF            spotify:… -0.826 -0.511 -0.0294  2.62   -0.0331\n 8 Stressed Out    Twenty One P… spotify:… -1.78  -0.647 -0.506   1.66    0.734 \n 9 Stressed Out    Twenty One P… spotify:… -1.78  -0.647 -0.506   1.66    0.734 \n10 Ride            Twenty One P… spotify:… -1.08  -1.23  -0.907  -0.507  -1.22  \n# ℹ 383 more rows\n```\n:::\n:::\n\n\nThe original features where replace by **Principal Components**\nthat explain most of the variance.\nFrom the prepared recipe, we extract a tidy form\nof the step we care about (usually the last one)\nto see, what happened to our data.\nWe can see, which features ended up contributing\nto which components by getting\nthe results of the pca step of our recipe.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-45_c0e7ad668f23498ee6804bc0bbc310a7'}\n\n```{.r .cell-code}\nterms <- tidy(songs_prep, id = \"pca\") %>% \n  mutate(component = parse_number(component))\n\nterms\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 225 × 4\n   terms              value component id   \n   <chr>              <dbl>     <dbl> <chr>\n 1 danceability     -0.226          1 pca  \n 2 energy           -0.423          1 pca  \n 3 key              -0.0765         1 pca  \n 4 loudness         -0.429          1 pca  \n 5 mode              0.0942         1 pca  \n 6 speechiness      -0.121          1 pca  \n 7 acousticness      0.399          1 pca  \n 8 instrumentalness  0.370          1 pca  \n 9 liveness         -0.118          1 pca  \n10 valence          -0.295          1 pca  \n# ℹ 215 more rows\n```\n:::\n:::\n\n\nLet's make this a plot!\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-46_5a9439e47240135435a2666e040d9bbe'}\n\n```{.r .cell-code}\ncolors <- fishualize::fish_pal(option = \"Centropyge_loricula\")(5)[3:4]\n\nterms %>% \n  filter(component <= 3) %>% \n  mutate(terms = tidytext::reorder_within(terms, by = value, within = component)) %>% \n  ggplot(aes(value, terms, fill = factor(sign(value)))) +\n  geom_col() +\n  scale_fill_manual(values = colors) +\n  facet_wrap(~component, labeller = label_both, scales = \"free\") +\n  tidytext::scale_y_reordered() +\n  guides(fill = \"none\")\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-46-1.png){width=100%}\n:::\n:::\n\n\nWe had to use 2 little helper functions from the\n`tidytext` package to properly order the bar.\nThe first component is largely comprised of a high\nacousticness and instrumentalness and less energy in the positive direction.\nSo we expect e.g. classical music to be very high on that axis.\nA high value on the second component means a high danceability\nwhile being low in tempo.\n\nSo where do our songs end up in principle component space?\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-47_fd5ba796f069cb39348609f6fff4da3a'}\n\n```{.r .cell-code}\nplt <- songs_baked %>% \n  ggplot(aes(PC1, PC2)) +\n  geom_point(aes(text = paste(track_name, \",\", track_artists)))\n\nplotly::ggplotly(plt)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-f7065cf1b66fd5c40032\" style=\"width:100%;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f7065cf1b66fd5c40032\">{\"x\":{\"data\":[{\"x\":[1.2073498631732975,-1.4259291191085941,0.25653371188754387,-1.0842947506710408,-1.7091615235783466,-0.77426161266420956,-0.82597348738521947,-1.7751346663633141,-1.7751346663633141,-1.0828919285544909,-1.0828919285544909,-0.3750794054015279,-0.3750794054015279,-0.35314423376915782,-0.56882069115703171,-0.56882069115703171,-0.56882069115703171,-0.47577337843008616,-1.7015983691295924,-0.33420777191435336,-0.4402318805697058,-1.7242099937753506,-1.0056758377142148,-1.4646101647047114,-0.94166253349091444,1.5816008794536551,3.3851143568527422,0.34347133589827517,1.1509986381990269,0.43091999589239172,0.48273950391493203,1.2893546418519639,-0.2454872407183501,2.4076880700990189,0.44536933674717616,-1.1259957479023006,-0.52504668233094653,-1.513986324056535,-0.82273139614512503,-0.81378064232130243,0.023321296814954776,0.073541675791637368,-1.3948966266667264,-0.5139906600353521,0.52125083165645725,-0.37507723258513492,0.15104868225490736,1.4407289449076865,-0.20064054584894891,-0.81025580957664078,-0.6289430096091867,0.23686163634334095,4.8419590371985031,2.2420857272077219,-0.58705593007450274,0.051874300416376196,0.15944060273179539,2.3321080346656222,0.6799386023022489,-0.36207579887009533,3.4313658871358954,5.5699332938304318,-0.15406604825757236,-0.10369669383026217,-1.855094473300265,-0.50475198001200972,-0.90678605805069079,-0.70068849079953899,-0.74958538532891672,-1.6987238045068607,-0.071876109842256716,-0.96820650958953336,-0.59620069326904102,-1.1088250454091502,-1.6783468003637143,0.21633468291945002,-0.66212131784513784,-0.32396281415742945,-1.8764264005377309,-1.7026640211417223,-0.22337759322737435,-2.1013924605141439,0.53127183616572449,-0.49811425176300461,-0.15733384772772088,-1.0672189413037418,-1.4402753731238216,-0.96411659290723761,-1.7150441664846263,-1.1042204323104363,-2.2938123980638094,-1.6616926733643453,-0.79438710088916875,-0.65563783133711762,-1.5266939524266385,-2.3379517606649611,-1.6309285492301044,-1.4706296240188781,-1.8951177153539023,-1.2372295566252653,-1.7892138311683126,-1.1240694498328441,-2.256564331551921,-0.28370008631486354,-1.5374362049395252,-1.6770977473324655,-1.5206986065323451,-1.7225531150151698,-1.7115418523005212,1.4621154397940772,-0.48694298856520951,1.7452724299020141,1.0790854622697184,-0.33127334619177051,-1.4765465376468345,-2.1910941616948802,1.7395319989335554,-0.75735167025040762,-1.4034365872108314,-2.1922777536863638,-2.25858122690643,-0.68107572834839014,-0.82954197948524433,-0.86734366897545079,-0.58626231646849369,0.18076475429608543,-0.98557809931837026,-1.6801010446273654,-1.513680816007321,-1.30071865776818,2.3587358979094124,3.1334160148932386,-0.26050889951096629,-0.20428761819106206,1.1412232028389924,0.96277782101688913,0.72425995982635238,-0.27997482778585814,-0.42507523374367651,-0.70562754401129335,-2.0574617178044741,-2.2719334170124328,-1.4001859346329084,-1.3191715719276,-0.19836092927371665,-1.0718462957834081,-2.19619544803734,-1.5210410568842738,-0.90889549753802046,-1.00308716256972,1.3044850014186617,-2.2235236761129542,-1.2719663667540804,-0.55386208496245937,-0.19190000449413827,-0.8818254580929793,-1.8494408939856328,-0.62264143436004082,-0.74402459994958159,-2.1375852506742534,-0.53877419016614847,-1.7981713907358852,-0.75374660113840319,-1.9308139719809387,-0.07645705404813509,-1.3234977565305792,0.65817402283703952,0.18988294381163986,-2.5027907741060864,-0.71187038369585132,-1.5290780953778818,-1.3456402755504338,-1.1176553264156939,-1.5082178250792502,-1.3905827624935414,-1.6850098721135738,-0.52343413302890662,-1.3105765706717074,-1.3376808226441208,-1.5600359095779732,-0.59270371031445046,-1.6292404499831747,-1.1819199232650954,-0.10810111419528218,-1.9629499680339413,-0.81637663418008166,-1.011895309833009,-1.5986141889889416,-1.1593513292671878,-0.61660212753756427,-1.4406200370307338,-0.15356804044885825,0.14644242008566316,1.1978027847199391,1.8843434175649914,3.7809751308682307,3.0736635446885701,1.1011043116266988,2.7638807763655424,1.2395789202027261,-1.2222841452297764,0.97790761578011054,-0.81657692691016681,-0.53915888629792652,-0.56798087746907011,-2.1181897710226392,-2.8486821349576577,-1.4350412242813078,-2.1954703726112439,-1.0120210833523284,-0.7409670434082346,-1.8265340069571425,0.26251971144200342,-0.06194932598514967,-2.3590029804200414,-0.89473015264325506,4.8060206269476904,3.4018231533259473,1.2834517479198002,5.32751750314904,4.8079923180922517,6.8153385157941333,4.1905780847706859,0.41998015785424259,-1.1431869762186506,-1.0282186738490644,-1.118777382134708,-0.89949206567303919,-1.3755753336275665,-0.50712668321278653,-0.95968453869837855,-0.79943216856893007,-0.27482735104902611,-1.0380530491346949,1.799638979453603,0.63468639616615885,-0.6563250249622099,-1.1925657497697277,3.2173216576548143,4.4716088171079438,5.9880453005068519,6.8619952929048535,6.2563335159091062,4.2059311635094154,5.5865327528953994,4.4508400320756429,6.4421970151646342,0.73493426937962392,4.8500201436451515,4.9503576184460067,5.8198775195110724,6.5106181326332582,8.294679031094681,5.6089718371258952,4.7902277915229297,6.3174242743256963,7.945061481109339,5.9436756720246091,5.9610561257917212,-2.0378180438890143,-0.43964264045536006,-0.35411835812318815,-0.38504023517225416,-0.98630772187305749,-0.36230803237059939,-0.15770882591155164,-0.2495761817439037,-0.81236870338780076,-1.700781422260141,-2.1795369311799133,-2.0076377931553728,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,-2.3075101729847454,-0.97700295207046284,-1.3105053238471789,-1.2068447326551186,-0.68792727413953525,1.7589095956283853,-0.78444560122819862,-1.1660612721637753,2.3242926716567562,-0.43646504372307732,-0.033787504849101757,0.24145452065771447,2.6742946086813393,0.35092639335112319,-1.0331120850363364,1.1317741764486959,0.68775743157784031,-0.56724360435266075,1.5370697861890159,-2.0155348267154691,0.58742162901956241,-0.089996849310532312,1.4198554909862411,1.0020420392706217,-0.52644614395616829,-1.2005606392875892,-0.046658754802789248,-0.42993995886884029,0.37871631107494086,-0.84110479761016632,0.9574502243954186,1.3759570423887708,1.1547328402895554,-0.61071952115758488,0.44528269129141285,-0.26976627419655935,1.4463866182775833,-0.34857296886624539,0.62028248052565005,0.054863327696693776,1.1365067274103815,-0.36343858154395869,1.4520644057884424,0.12283032917974554,1.7749070506242586,-0.79902372226251306,-0.75803555263082456,0.47893594622978319,3.1181177346206361,0.51390515082631183,1.5256104341251349,0.072050531438759474,0.35952068739570103,-0.39443978501111476,0.42928130724469127,-1.2139011449883128,1.2613597314904472,0.18717899107146002,0.93745464090915964,-1.406405022642075,0.89439566074548726,-0.50645497199752099,-1.055184633188248,-1.0691042638272612,-1.8239974571906221,-1.2179270001887603,-1.3348233394478288,1.0812437409965927,-1.0594760678142561,-0.20858330977621087,0.13646943708417658,2.6640119538071678,0.96201620689450751,-1.0672510120810108,-0.15709347071265475,-0.58674799458321936,-1.2597128671549591,0.35178450171742642,0.4659212240051101,-1.7641097050112591,-1.7751346663633141,-1.7751346663633141,-1.0828919285544909,-1.0828919285544909,-0.3750794054015279,-0.3750794054015279,-0.56882069115703171,-0.56882069115703171,-0.56882069115703171,-0.87919671025673929,-0.78628465467826114,0.060564443476393212,-0.56882069115703171,-0.56882069115703171,-0.56882069115703171,-1.8324709451319523,-0.33313202821677601],\"y\":[-3.3167476846643442,-1.8425612444195321,-3.2275523729862976,-1.2076358797790039,1.2577254793959169,0.79203822777903254,-0.51084407831759826,-0.646505880068732,-0.646505880068732,-1.2313103969519796,-1.2313103969519796,-1.3388836319888058,-1.3388836319888058,0.58374269935600487,0.33091762770372268,0.33091762770372268,0.33091762770372268,0.88409692134837448,0.5430906368837175,0.7817361486510962,2.2813048785243888,1.3790026593947671,-0.78918541076092263,0.42743373331213907,1.1999711000009667,1.2533179003911319,-0.45052700353599684,0.35965608526185144,-0.23382749772088984,1.3733566307404905,1.3784184878931072,1.2596437991005738,1.0469210776674627,0.79156970795543469,0.58824510882015857,1.3415559262714103,-0.35691580037877058,0.59754140518278609,-1.6995775572154288,1.177607904368378,1.0797226754020857,2.8185485721747918,1.2680561118832614,0.77443507766346853,0.24411968606988949,-0.76282088973012863,0.35304555932171489,0.20377048487304361,0.6691741402066016,0.60017585752269653,-0.83369269401930191,-0.56198854196194747,1.7213054773004492,0.70743174329010339,2.1497723063698464,0.46753768670624068,1.3094485502777435,0.78655897702381461,0.25704659607251673,1.74731268271007,0.277240207038082,1.9110293771349016,1.2447696485764306,0.38188513101579774,0.41920090027907969,1.5191492234446144,-1.1213662154837793,0.78757525929679184,0.31980472424827439,0.64351461339570815,1.4622523816569579,-0.11625770295219967,0.3410301439120631,-0.71478750482956288,0.25992419304400793,0.91571428922366982,-0.06959921561406901,1.3432820064145354,-0.23307015355434407,-1.0208285712556278,-0.1301872949959223,0.183816146339396,1.5385181298938417,-0.4280463446885,2.7972792433871985,1.3759170058902483,-0.79922293055150195,-0.91432219003010251,2.0128302903721971,1.4677970731924348,1.5808270074254556,0.37463668952467211,1.5334713814023546,2.1116452702886352,-0.28595880130120388,0.47800542281583008,1.7106824174475568,-0.43751484081751491,1.1385539172296233,1.3946806815978818,-0.25385710173393738,1.0416441665280811,0.96814580022488717,1.2839798263448166,1.2827917779309521,2.0430039053586735,0.90615047197969645,0.78704799841212436,0.78088491905284274,-1.5877380700961199,-2.7853042424334937,2.0277550796836574,0.0054415822383544199,-0.17395833857679463,-0.91727712043887333,-1.0033432279683527,-0.57759837113274326,-0.92428840458570305,-0.28139329265660284,-0.27816073230198435,-0.40078085110124062,0.043227110026546611,0.13789869893319978,-0.64249047173731366,0.1330950039412262,1.4257209128831396,0.79016801575387707,0.16819553025433079,-1.0959639329105983,-0.45398414385939462,0.098044467615529679,-0.098169846899495844,-0.12162971728162539,0.71548402584469328,1.127958643005083,-1.8511689425437896,-0.36536057548502326,-0.69762091679085492,-1.2337831437250584,-2.3920823764116994,1.0720915435612337,1.0276235223341532,0.64282348150795621,-0.10115874203632008,1.1938678306855652,0.68026945279121076,1.146101004418568,0.56309717365545187,0.28940841803129946,1.2277748931261547,-0.27351026906643994,0.49636975235392761,0.27388857063677696,0.36821137382854852,0.58293587308365957,-0.10760585418114588,0.9394941485449626,-0.16105696588295726,0.72827677205513441,0.19327751448643232,0.17686415798075755,1.1788257079858269,1.1980889612869188,0.072833041063883885,1.6987618987108775,0.18080748543814837,2.3472139531816762,0.99727792639812229,0.08240403381196848,0.92925561876473428,1.1599557354329586,0.14780087667571717,1.547181578484234,0.56686592433405592,1.1167082507919734,-0.32526872827842201,0.66461268662077289,-0.16514994882075035,1.5493395012667173,-0.1482460473057092,0.07054739022481038,0.71542673895434794,-0.12544323817135117,-0.88793172619947336,0.43929344273311099,-0.38691137131131637,-0.56229321671946786,1.0687133588392128,1.0410130106160898,-0.53100848921133448,0.73367591329332404,0.0040103322508913131,-1.4054457335187445,-0.83186554158929948,0.7338952225034947,0.21993695573532579,-0.31890323751689853,2.0006211326105525,-0.29556889144230558,-0.25711708988896387,0.19718671562831527,1.1313840652007057,0.76712674057776731,-0.35039610761776185,-2.4888455297858982,1.012963763899573,-0.54230339022296548,0.24383969211610682,-0.99456191651613979,0.38071543029173743,0.023478973709225748,-0.86356716732388372,-0.36692592647632405,0.6661047631393735,1.1056774246097987,0.58842644506397146,1.5317043936242132,1.1420576411907022,0.34060252173642891,1.4830803400536825,1.1152938969593853,0.68663951651252764,0.20252083137237287,0.82198149816632937,1.3240166086320133,2.1415948790903006,1.5826855205339461,2.3481039148321736,2.9770541297433333,1.7492439040687375,1.6837487089589851,1.9003231014745436,3.168087581261803,1.1413358229970134,1.3639202849520038,3.9598687662675403,1.3775471222594713,2.571367325400951,0.61295413415748623,-0.093958697859215512,-0.075000581967367808,0.65177690851245185,-0.58726002296847779,-0.47928276467536246,-0.88756118526342642,0.5781710692276818,0.61092834277466079,-2.727287057281373,0.37741211025059318,0.35284854578534808,0.48285118483216727,0.4057330809734887,1.5082593666456161,0.6446225542164119,-0.68131741056821649,1.4576373339192246,0.5033046798881472,1.3288278079750975,1.2795305810082476,-0.021016809573205411,0.3611313449029126,0.70421465588898069,0.852665585844116,0.35445588137220574,0.7333933431972921,0.01648045375207445,0.96858875817281231,-1.9944258293024939,0.7879606730465768,1.0051494320520087,-0.49025932589710602,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0.23892285465377411,0.74980222438718791,0.72648366669697628,0.53947972016417955,0.21760705441065842,0.96741465731803555,-0.5962263951248481,-1.6760942088854609,-1.7910113744770508,0.068867775460733777,-2.6981798600681053,-2.3466978673172703,-1.7835380208654708,-2.5120351814011279,-1.5110099478050936,-1.7609514765036893,-1.7048806580180607,-0.84969018359945281,-2.1475188687806686,-0.53594907699556682,-1.9072599635930567,-0.86409266655346584,-1.4776961880043653,-2.7483002513289767,-1.1012400495880379,-1.6458139264744918,-1.8442272508792521,-2.0715216125434921,-2.7393103412265352,-1.8862180986732207,-0.60433984500213156,-0.8243732585203738,-0.68406298494183959,-1.9018964236955449,-1.6952586199577353,-1.1611483941545471,-2.3677375432294498,-3.1349924272855763,-3.0891040246594788,-2.1067176726498804,-1.0240082249324609,-2.6610129811501313,-1.2611193360019441,-0.66597325537486096,-2.2766870076131314,-1.86062992318454,-2.1926109063570891,-2.9128476650861703,-2.8384429113583929,-1.6107449212019587,-0.86840117209546264,-1.7434882654415618,-2.9991456877246709,-2.7478766701781439,-1.9826020685683454,-1.8281278801682197,-1.4755185061029139,-1.866825720529393,-2.7499517151223212,-2.035305628913465,-1.3877797823363351,-1.710021470252437,0.056595679130549886,0.079400764355633202,0.37721570230919294,0.19725571057465913,0.25617650581632395,1.8430920218739699,1.7649837611198298,-1.7453403264933456,-1.7840665112551677,-1.2971635959380063,-1.5856130972226909,-2.490929477488081,-2.4302778274549071,-0.30406214220260919,-0.92251278425731575,-1.3071276321155123,-0.70482954697427735,0.53286322245298856,-0.646505880068732,-0.646505880068732,-1.2313103969519796,-1.2313103969519796,-1.3388836319888058,-1.3388836319888058,0.33091762770372268,0.33091762770372268,0.33091762770372268,0.27656443642276873,-1.6730142293193935,-0.17348444307240507,0.33091762770372268,0.33091762770372268,0.33091762770372268,-1.0791495703885248,0.56791810443326673],\"text\":[\"PC1:  1.20734986<br />PC2: -3.316747685<br />Africa , TOTO\",\"PC1: -1.42592912<br />PC2: -1.842561244<br />Take on Me , a-ha\",\"PC1:  0.25653371<br />PC2: -3.227552373<br />Wake Me Up Before You Go-Go , Wham!\",\"PC1: -1.08429475<br />PC2: -1.207635880<br />I'm Still Standing , Elton John\",\"PC1: -1.70916152<br />PC2:  1.257725479<br />Wolf Totem (feat. Jacoby Shaddix of Papa Roach) , The HU;Jacoby Shaddix;Papa Roach\",\"PC1: -0.77426161<br />PC2:  0.792038228<br />Yuve Yuve Yu , The HU\",\"PC1: -0.82597349<br />PC2: -0.510844078<br />The Search , NF\",\"PC1: -1.77513467<br />PC2: -0.646505880<br />Stressed Out , Twenty One Pilots\",\"PC1: -1.77513467<br />PC2: -0.646505880<br />Stressed Out , Twenty One Pilots\",\"PC1: -1.08289193<br />PC2: -1.231310397<br />Ride , Twenty One Pilots\",\"PC1: -1.08289193<br />PC2: -1.231310397<br />Ride , Twenty One Pilots\",\"PC1: -0.37507941<br />PC2: -1.338883632<br />Heathens , Twenty One Pilots\",\"PC1: -0.37507941<br />PC2: -1.338883632<br />Heathens , Twenty One Pilots\",\"PC1: -0.35314423<br />PC2:  0.583742699<br />Jumpsuit , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -0.47577338<br />PC2:  0.884096921<br />Diggy Diggy Hole , Wind Rose\",\"PC1: -1.70159837<br />PC2:  0.543090637<br />Feel Invincible , Skillet\",\"PC1: -0.33420777<br />PC2:  0.781736149<br />Monster , STARSET\",\"PC1: -0.44023188<br />PC2:  2.281304879<br />Through The Fire And Flames , DragonForce\",\"PC1: -1.72420999<br />PC2:  1.379002659<br />When Legends Rise , Godsmack\",\"PC1: -1.00567584<br />PC2: -0.789185411<br />Legend , The Score\",\"PC1: -1.46461016<br />PC2:  0.427433733<br />For the Glory , All Good Things\",\"PC1: -0.94166253<br />PC2:  1.199971100<br />Eye Of The Storm , Watt White\",\"PC1:  1.58160088<br />PC2:  1.253317900<br />Last to Leave , Humblebee\",\"PC1:  3.38511436<br />PC2: -0.450527004<br />Pigments , Norabel\",\"PC1:  0.34347134<br />PC2:  0.359656085<br />Cognac Carousel , A P O L L O\",\"PC1:  1.15099864<br />PC2: -0.233827498<br />Eclipse , Carter Fox\",\"PC1:  0.43092000<br />PC2:  1.373356631<br />High Noon , Toby Tranter\",\"PC1:  0.48273950<br />PC2:  1.378418488<br />Heliolingus , Ooyy\",\"PC1:  1.28935464<br />PC2:  1.259643799<br />Sense , Cushy\",\"PC1: -0.24548724<br />PC2:  1.046921078<br />Recenseo , Humblebee\",\"PC1:  2.40768807<br />PC2:  0.791569708<br />Autumn Mournings to Winter Nights , DJ DENZ The Rooster\",\"PC1:  0.44536934<br />PC2:  0.588245109<br />Neon Gravestones , Twenty One Pilots\",\"PC1: -1.12599575<br />PC2:  1.341555926<br />Radioactive , Imagine Dragons\",\"PC1: -0.52504668<br />PC2: -0.356915800<br />Leave a Light On , Tom Walker\",\"PC1: -1.51398632<br />PC2:  0.597541405<br />No Good , KALEO\",\"PC1: -0.82273140<br />PC2: -1.699577557<br />New Shoes , Paolo Nutini\",\"PC1: -0.81378064<br />PC2:  1.177607904<br />The Fear , The Score\",\"PC1:  0.02332130<br />PC2:  1.079722675<br />Flowers , Other People's Heartache;Bastille;Rationale;James Arthur\",\"PC1:  0.07354168<br />PC2:  2.818548572<br />Pinkish , Gerard Way\",\"PC1: -1.39489663<br />PC2:  1.268056112<br />Blood Runs Red , 78rpm\",\"PC1: -0.51399066<br />PC2:  0.774435078<br />Weight of the World , Battle Tapes\",\"PC1:  0.52125083<br />PC2:  0.244119686<br />Kerosene Dreams , X Ambassadors\",\"PC1: -0.37507723<br />PC2: -0.762820890<br />The Run and Go , Twenty One Pilots\",\"PC1:  0.15104868<br />PC2:  0.353045559<br />Way down We Go , KALEO\",\"PC1:  1.44072894<br />PC2:  0.203770485<br />Judgement Day , Blues Saraceno\",\"PC1: -0.20064055<br />PC2:  0.669174140<br />Cha-Ching (Till We Grow Older) , Imagine Dragons\",\"PC1: -0.81025581<br />PC2:  0.600175858<br />Flame , Sundara Karma\",\"PC1: -0.62894301<br />PC2: -0.833692694<br />How to Save a Life , The Fray\",\"PC1:  0.23686164<br />PC2: -0.561988542<br />Automobile , KALEO\",\"PC1:  4.84195904<br />PC2:  1.721305477<br />Cornfield Chase , Hans Zimmer\",\"PC1:  2.24208573<br />PC2:  0.707431743<br />Fringe Society , Sami Matar\",\"PC1: -0.58705593<br />PC2:  2.149772306<br />Synthblade , Cyberpunkers\",\"PC1:  0.05187430<br />PC2:  0.467537687<br />Blood Magic , Daniel Deluxe\",\"PC1:  0.15944060<br />PC2:  1.309448550<br />Pacific Coast Highway , Fukkk Offf\",\"PC1:  2.33210803<br />PC2:  0.786558977<br />Blade Runner - End Titles , Vangelis\",\"PC1:  0.67993860<br />PC2:  0.257046596<br />All My Heroes , Naeleck;Sarah Rebecca\",\"PC1: -0.36207580<br />PC2:  1.747312683<br />66 MHz , Waveshaper\",\"PC1:  3.43136589<br />PC2:  0.277240207<br />Synthetic , Duke & Jones\",\"PC1:  5.56993329<br />PC2:  1.911029377<br />Holograms , M83\",\"PC1: -0.15406605<br />PC2:  1.244769649<br />Cyberworld , Boisterous Pop\",\"PC1: -0.10369669<br />PC2:  0.381885131<br />Burn Out , Imagine Dragons\",\"PC1: -1.85509447<br />PC2:  0.419200900<br />Don't Threaten Me with a Good Time , Panic! At The Disco\",\"PC1: -0.50475198<br />PC2:  1.519149223<br />Take Over , League of Legends;MAX;Jeremy McKinnon of A Day To Remember;Henry\",\"PC1: -0.90678606<br />PC2: -1.121366215<br />Level of Concern , Twenty One Pilots\",\"PC1: -0.70068849<br />PC2:  0.787575259<br />Warriors , Imagine Dragons\",\"PC1: -0.74958539<br />PC2:  0.319804724<br />Into the Unknown - Panic! At The Disco Version , Panic! At The Disco\",\"PC1: -1.69872380<br />PC2:  0.643514613<br />Centuries , Fall Out Boy\",\"PC1: -0.07187611<br />PC2:  1.462252382<br />My Demons , STARSET\",\"PC1: -0.96820651<br />PC2: -0.116257703<br />Born For This , The Score\",\"PC1: -0.59620069<br />PC2:  0.341030144<br />Mouth Of The River , Imagine Dragons\",\"PC1: -1.10882505<br />PC2: -0.714787505<br />Bang! , AJR\",\"PC1: -1.67834680<br />PC2:  0.259924193<br />Thnks fr th Mmrs , Fall Out Boy\",\"PC1:  0.21633468<br />PC2:  0.915714289<br />Awaken , League of Legends;Valerie Broussard;Ray Chen\",\"PC1: -0.66212132<br />PC2: -0.069599216<br />Better Days , OneRepublic\",\"PC1: -0.32396281<br />PC2:  1.343282006<br />Who We Are , Imagine Dragons\",\"PC1: -1.87642640<br />PC2: -0.233070154<br />Victorious , Panic! At The Disco\",\"PC1: -1.70266402<br />PC2: -1.020828571<br />Lane Boy , Twenty One Pilots\",\"PC1: -0.22337759<br />PC2: -0.130187295<br />Wherever You Are , Kodaline\",\"PC1: -2.10139246<br />PC2:  0.183816146<br />Dance, Dance , Fall Out Boy\",\"PC1:  0.53127184<br />PC2:  1.538518130<br />Gold , Imagine Dragons\",\"PC1: -0.49811425<br />PC2: -0.428046345<br />Play with Fire (feat. Yacht Money) , Sam Tinnesz;Yacht Money\",\"PC1: -0.15733385<br />PC2:  2.797279243<br />Stronger , The Score\",\"PC1: -1.06721894<br />PC2:  1.375917006<br />Phoenix , League of Legends;Cailin Russo;Chrissy Costanza\",\"PC1: -1.44027537<br />PC2: -0.799222931<br />Emperor's New Clothes , Panic! At The Disco\",\"PC1: -0.96411659<br />PC2: -0.914322190<br />Machine , Imagine Dragons\",\"PC1: -1.71504417<br />PC2:  2.012830290<br />Father of All... , Green Day\",\"PC1: -1.10422043<br />PC2:  1.467797073<br />S01E02.Return.Of.The.Arsonist.720p.HDTV.x264 , Blood Command\",\"PC1: -2.29381240<br />PC2:  1.580827007<br />Reckless Paradise , Billy Talent\",\"PC1: -1.66169267<br />PC2:  0.374636690<br />All My Friends Are Nobodies , zebrahead\",\"PC1: -0.79438710<br />PC2:  1.533471381<br />Out For Blood , Sum 41\",\"PC1: -0.65563783<br />PC2:  2.111645270<br />Broken Dreams, Inc. , Rise Against\",\"PC1: -1.52669395<br />PC2: -0.285958801<br />Why Worry , Set It Off\",\"PC1: -2.33795176<br />PC2:  0.478005423<br />Fire, Ready, Aim , Green Day\",\"PC1: -1.63092855<br />PC2:  1.710682417<br />Chelsea , Dragged Under\",\"PC1: -1.47062962<br />PC2: -0.437514841<br />American Attraction , Anti-Flag\",\"PC1: -1.89511772<br />PC2:  1.138553917<br />If You're Looking for Your Knife...I Think My Back Found It , zebrahead\",\"PC1: -1.23722956<br />PC2:  1.394680682<br />You're Gonna Go Far, Kid , The Offspring\",\"PC1: -1.78921383<br />PC2: -0.253857102<br />Trash Bat , AFI\",\"PC1: -1.12406945<br />PC2:  1.041644167<br />Hrsa , Bowling For Soup\",\"PC1: -2.25656433<br />PC2:  0.968145800<br />Na Na Na (Na Na Na Na Na Na Na Na Na) , My Chemical Romance\",\"PC1: -0.28370009<br />PC2:  1.283979826<br />Gone Away , Nomy\",\"PC1: -1.53743620<br />PC2:  1.282791778<br />A Million Miles , Goldfinger\",\"PC1: -1.67709775<br />PC2:  2.043003905<br />The Perfect Crime , zebrahead\",\"PC1: -1.52069861<br />PC2:  0.906150472<br />Gave You Everything , The Interrupters\",\"PC1: -1.72255312<br />PC2:  0.787047998<br />Get Dark , AFI\",\"PC1: -1.71154185<br />PC2:  0.780884919<br />Quarantine , blink-182\",\"PC1:  1.46211544<br />PC2: -1.587738070<br />Knockin' On Heaven's Door , Bob Dylan\",\"PC1: -0.48694299<br />PC2: -2.785304242<br />Surfin' U.S.A. - Remastered 2001 , The Beach Boys\",\"PC1:  1.74527243<br />PC2:  2.027755080<br />Main Titles , Ramin Djawadi\",\"PC1:  1.07908546<br />PC2:  0.005441582<br />Another Love , Tom Odell\",\"PC1: -0.33127335<br />PC2: -0.173958339<br />Halo , Beyoncé\",\"PC1: -1.47654654<br />PC2: -0.917277120<br />Crazy In Love (feat. Jay-Z) , Beyoncé;JAY-Z\",\"PC1: -2.19109416<br />PC2: -1.003343228<br />Formation , Beyoncé\",\"PC1:  1.73953200<br />PC2: -0.577598371<br />Perfect Duet (Ed Sheeran & Beyoncé) , Ed Sheeran;Beyoncé\",\"PC1: -0.75735167<br />PC2: -0.924288405<br />Complicated , Avril Lavigne\",\"PC1: -1.40343659<br />PC2: -0.281393293<br />Sk8er Boi , Avril Lavigne\",\"PC1: -2.19227775<br />PC2: -0.278160732<br />Girlfriend , Avril Lavigne\",\"PC1: -2.25858123<br />PC2: -0.400780851<br />What the Hell , Avril Lavigne\",\"PC1: -0.68107573<br />PC2:  0.043227110<br />Head Above Water , Avril Lavigne\",\"PC1: -0.82954198<br />PC2:  0.137898699<br />Dog Days Are Over , Florence + The Machine\",\"PC1: -0.86734367<br />PC2: -0.642490472<br />You've Got The Love , Florence + The Machine\",\"PC1: -0.58626232<br />PC2:  0.133095004<br />Shake It Out , Florence + The Machine\",\"PC1:  0.18076475<br />PC2:  1.425720913<br />Dusk Till Dawn - Radio Edit , ZAYN;Sia\",\"PC1: -0.98557810<br />PC2:  0.790168016<br />Together , Sia\",\"PC1: -1.68010104<br />PC2:  0.168195530<br />Let's Love , David Guetta;Sia\",\"PC1: -1.51368082<br />PC2: -1.095963933<br />Chandelier , Sia\",\"PC1: -1.30071866<br />PC2: -0.453984144<br />Cheap Thrills , Sia\",\"PC1:  2.35873590<br />PC2:  0.098044468<br />Someone Like You , Adele\",\"PC1:  3.13341601<br />PC2: -0.098169847<br />Make You Feel My Love , Adele\",\"PC1: -0.26050890<br />PC2: -0.121629717<br />Rolling in the Deep , Adele\",\"PC1: -0.20428762<br />PC2:  0.715484026<br />Set Fire to the Rain , Adele\",\"PC1:  1.14122320<br />PC2:  1.127958643<br />When We Were Young , Adele\",\"PC1:  0.96277782<br />PC2: -1.851168943<br />I Want to Know What Love Is - 1999 Remaster , Foreigner\",\"PC1:  0.72425996<br />PC2: -0.365360575<br />Waiting for a Girl like You , Foreigner\",\"PC1: -0.27997483<br />PC2: -0.697620917<br />Juke Box Hero , Foreigner\",\"PC1: -0.42507523<br />PC2: -1.233783144<br />Cold as Ice , Foreigner\",\"PC1: -0.70562754<br />PC2: -2.392082376<br />Hot Blooded , Foreigner\",\"PC1: -2.05746172<br />PC2:  1.072091544<br />The Phoenix , Fall Out Boy\",\"PC1: -2.27193342<br />PC2:  1.027623522<br />Wolf in Sheep's Clothing , Set It Off;William Beckett\",\"PC1: -1.40018593<br />PC2:  0.642823482<br />Bob Dylan , Fall Out Boy\",\"PC1: -1.31917157<br />PC2: -0.101158742<br />Don't Stop the Devil , Dead Posey\",\"PC1: -0.19836093<br />PC2:  1.193867831<br />You're Gonna Know My Name , Watt White\",\"PC1: -1.07184630<br />PC2:  0.680269453<br />Sinners , Barns Courtney\",\"PC1: -2.19619545<br />PC2:  1.146101004<br />Hero of Our Time , NateWantsToBattle\",\"PC1: -1.52104106<br />PC2:  0.563097174<br />Catch Me If You Can , Set It Off\",\"PC1: -0.90889550<br />PC2:  0.289408418<br />Any Other Way , We The Kings\",\"PC1: -1.00308716<br />PC2:  1.227774893<br />E.T. , First to Eleven\",\"PC1:  1.30448500<br />PC2: -0.273510269<br />Toss A Coin To Your Witcher , Sonya Belousova;Giona Ostinelli;Joey Batey\",\"PC1: -2.22352368<br />PC2:  0.496369752<br />Genius , Written by Wolves\",\"PC1: -1.27196637<br />PC2:  0.273888571<br />Finish Line , Skillet\",\"PC1: -0.55386208<br />PC2:  0.368211374<br />All Eyes on You , Smash Into Pieces\",\"PC1: -0.19190000<br />PC2:  0.582935873<br />Bells , The Unlikely Candidates\",\"PC1: -0.88182546<br />PC2: -0.107605854<br />Death of Me , SAINT PHNX\",\"PC1: -1.84944089<br />PC2:  0.939494149<br />Arcadia , Smash Into Pieces\",\"PC1: -0.62264143<br />PC2: -0.161056966<br />Carry On , The Score;AWOLNATION\",\"PC1: -0.74402460<br />PC2:  0.728276772<br />Pegasus Seiya , The Struts\",\"PC1: -2.13758525<br />PC2:  0.193277514<br />Can't Go to Hell , Sin Shake Sin\",\"PC1: -0.53877419<br />PC2:  0.176864158<br />Monster , Imagine Dragons\",\"PC1: -1.79817139<br />PC2:  1.178825708<br />Under The Pressure , The Score\",\"PC1: -0.75374660<br />PC2:  1.198088961<br />Elastic Heart (Rock Version) , Written by Wolves\",\"PC1: -1.93081397<br />PC2:  0.072833041<br />Your Turn to Roll (Critical Role Theme) , Ashley Johnson;Laura Bailey;Sam Riegel\",\"PC1: -0.07645705<br />PC2:  1.698761899<br />Bad Apple!! , RichaadEB;Cristina Vee\",\"PC1: -1.32349776<br />PC2:  0.180807485<br />Made For This , City Wolf\",\"PC1:  0.65817402<br />PC2:  2.347213953<br />This Is Our War , Halocene\",\"PC1:  0.18988294<br />PC2:  0.997277926<br />Toss a Coin to Your Witcher (Metal Version) , Dan Vasc\",\"PC1: -2.50279077<br />PC2:  0.082404034<br />Dear Future Self (Hands Up) , Fall Out Boy;Wyclef Jean\",\"PC1: -0.71187038<br />PC2:  0.929255619<br />Run Like A Rebel , The Score\",\"PC1: -1.52907810<br />PC2:  1.159955735<br />Animal In Me , Solence\",\"PC1: -1.34564028<br />PC2:  0.147800877<br />House of Memories , Panic! At The Disco\",\"PC1: -1.11765533<br />PC2:  1.547181578<br />Toss a Coin to Your Witcher , Ghost Fight\",\"PC1: -1.50821783<br />PC2:  0.566865924<br />The Greatest Show , Panic! At The Disco\",\"PC1: -1.39058276<br />PC2:  1.116708251<br />Lonely Dance , Set It Off\",\"PC1: -1.68500987<br />PC2: -0.325268728<br />I'm Dangerous , The EverLove\",\"PC1: -0.52343413<br />PC2:  0.664612687<br />Best Part , The Score\",\"PC1: -1.31057657<br />PC2: -0.165149949<br />My Name Is.. , Once Monsters\",\"PC1: -1.33768082<br />PC2:  1.549339501<br />Phantom , NateWantsToBattle\",\"PC1: -1.56003591<br />PC2: -0.148246047<br />Six Feet , Patent Pending\",\"PC1: -0.59270371<br />PC2:  0.070547390<br />In My Bones , The Score\",\"PC1: -1.62924045<br />PC2:  0.715426739<br />Stay Frosty Royal Milk Tea , Fall Out Boy\",\"PC1: -1.18191992<br />PC2: -0.125443238<br />Revolution , The Score\",\"PC1: -0.10810111<br />PC2: -0.887931726<br />Stand Up , The Cab\",\"PC1: -1.96294997<br />PC2:  0.439293443<br />Killer In The Mirror , Set It Off\",\"PC1: -0.81637663<br />PC2: -0.386911371<br />Night of Your Life , WAR*HALL\",\"PC1: -1.01189531<br />PC2: -0.562293217<br />Protector , City Wolf\",\"PC1: -1.59861419<br />PC2:  1.068713359<br />Rule The World , Valley Of Wolves\",\"PC1: -1.15935133<br />PC2:  1.041013011<br />A Real Life , Greek Fire\",\"PC1: -0.61660213<br />PC2: -0.531008489<br />King of the World , WAR*HALL\",\"PC1: -1.44062004<br />PC2:  0.733675913<br />Wolves , Sam Tinnesz;Silverberg\",\"PC1: -0.15356804<br />PC2:  0.004010332<br />Ready Set Let's Go , Sam Tinnesz\",\"PC1:  0.14644242<br />PC2: -1.405445734<br />Broken Bones , KALEO\",\"PC1:  1.19780278<br />PC2: -0.831865542<br />All the Pretty Girls , KALEO\",\"PC1:  1.88434342<br />PC2:  0.733895223<br />Vor í Vaglaskógi , KALEO\",\"PC1:  3.78097513<br />PC2:  0.219936956<br />The Wild , Mumford & Sons\",\"PC1:  3.07366354<br />PC2: -0.318903238<br />October Skies , Mumford & Sons\",\"PC1:  1.10110431<br />PC2:  2.000621133<br />Darkness Visible , Mumford & Sons\",\"PC1:  2.76388078<br />PC2: -0.295568891<br />Wild Heart , Mumford & Sons\",\"PC1:  1.23957892<br />PC2: -0.257117090<br />Delta , Mumford & Sons\",\"PC1: -1.22228415<br />PC2:  0.197186716<br />Alligator , Of Monsters and Men\",\"PC1:  0.97790762<br />PC2:  1.131384065<br />Under A Dome , Of Monsters and Men\",\"PC1: -0.81657693<br />PC2:  0.767126741<br />Soothsayer , Of Monsters and Men\",\"PC1: -0.53915889<br />PC2: -0.350396108<br />What's Up Danger (with Black Caviar) , Blackway;Black Caviar\",\"PC1: -0.56798088<br />PC2: -2.488845530<br />Sunflower - Spider-Man: Into the Spider-Verse , Post Malone;Swae Lee\",\"PC1: -2.11818977<br />PC2:  1.012963764<br />Way Up , Jaden\",\"PC1: -2.84868213<br />PC2: -0.542303390<br />Familia (with Anuel Aa, feat. Bantu) - Spider-Man: Into the Spider-Verse , Nicki Minaj;Anuel AA;Bantu\",\"PC1: -1.43504122<br />PC2:  0.243839692<br />Invincible , Aminé\",\"PC1: -2.19547037<br />PC2: -0.994561917<br />Start a Riot , Duckwrth;Shaboozey\",\"PC1: -1.01202108<br />PC2:  0.380715430<br />Hide (feat. Seezyn) , Juice WRLD;Seezyn\",\"PC1: -0.74096704<br />PC2:  0.023478974<br />Memories , Thutmose\",\"PC1: -1.82653401<br />PC2: -0.863567167<br />Save The Day (feat. Coi Leray & LouGotCash) , Ski Mask The Slump God;Jacquees;Coi Leray;LouGotCash\",\"PC1:  0.26251971<br />PC2: -0.366925926<br />Let Go , Beau Young Prince\",\"PC1: -0.06194933<br />PC2:  0.666104763<br />Scared of the Dark (feat. XXXTENTACION) , Lil Wayne;Ty Dolla $ign;XXXTENTACION\",\"PC1: -2.35900298<br />PC2:  1.105677425<br />Elevate (feat. Denzel Curry, YBN Cordae, SwaVay, Trevor Rich) , DJ Khalil;Denzel Curry;Cordae;Swavay;Trevor Rich\",\"PC1: -0.89473015<br />PC2:  0.588426445<br />Home , Vince Staples;Richie Kohan\",\"PC1:  4.80602063<br />PC2:  1.531704394<br />2049 , Hans Zimmer;Benjamin Wallfisch\",\"PC1:  3.40182315<br />PC2:  1.142057641<br />Flight to LAPD , Hans Zimmer;Benjamin Wallfisch\",\"PC1:  1.28345175<br />PC2:  0.340602522<br />Summer Wind , Frank Sinatra\",\"PC1:  5.32751750<br />PC2:  1.483080340<br />Memory , Hans Zimmer;Benjamin Wallfisch\",\"PC1:  4.80799232<br />PC2:  1.115293897<br />One For My Baby (And One More For The Road) , Frank Sinatra\",\"PC1:  6.81533852<br />PC2:  0.686639517<br />Her Eyes Were Green , Hans Zimmer;Benjamin Wallfisch\",\"PC1:  4.19057808<br />PC2:  0.202520831<br />Blade Runner , Hans Zimmer;Benjamin Wallfisch\",\"PC1:  0.41998016<br />PC2:  0.821981498<br />Almost Human - from the Original Motion Picture Soundtrack Blade Runner 2049 , Lauren Daigle\",\"PC1: -1.14318698<br />PC2:  1.324016609<br />The Great Die-Off , Rise Against\",\"PC1: -1.02821867<br />PC2:  2.141594879<br />I Don’t Want To Be Here Anymore , Rise Against\",\"PC1: -1.11877738<br />PC2:  1.582685521<br />Tragedy + Time , Rise Against\",\"PC1: -0.89949207<br />PC2:  2.348103915<br />The Black Market , Rise Against\",\"PC1: -1.37557533<br />PC2:  2.977054130<br />The Eco-Terrorist In Me , Rise Against\",\"PC1: -0.50712668<br />PC2:  1.749243904<br />Sudden Life , Rise Against\",\"PC1: -0.95968454<br />PC2:  1.683748709<br />A Beautiful Indifference , Rise Against\",\"PC1: -0.79943217<br />PC2:  1.900323101<br />Methadone , Rise Against\",\"PC1: -0.27482735<br />PC2:  3.168087581<br />Zero Visibility , Rise Against\",\"PC1: -1.03805305<br />PC2:  1.141335823<br />Awake Too Long , Rise Against\",\"PC1:  1.79963898<br />PC2:  1.363920285<br />People Live Here , Rise Against\",\"PC1:  0.63468640<br />PC2:  3.959868766<br />Bridges , Rise Against\",\"PC1: -0.65632502<br />PC2:  1.377547122<br />Escape Artists , Rise Against\",\"PC1: -1.19256575<br />PC2:  2.571367325<br />About Damn Time , Rise Against\",\"PC1:  3.21732166<br />PC2:  0.612954134<br />We Will Never Forget , William Potter\",\"PC1:  4.47160882<br />PC2: -0.093958698<br />Main Title , John Williams;London Symphony Orchestra\",\"PC1:  5.98804530<br />PC2: -0.075000582<br />Imperial Attack , John Williams;London Symphony Orchestra\",\"PC1:  6.86199529<br />PC2:  0.651776909<br />Princess Leia's Theme , John Williams;London Symphony Orchestra\",\"PC1:  6.25633352<br />PC2: -0.587260023<br />The Desert and the Robot Auction , John Williams;London Symphony Orchestra\",\"PC1:  4.20593116<br />PC2: -0.479282765<br />Ben's Death and TIE Fighter Attack , John Williams;London Symphony Orchestra\",\"PC1:  5.58653275<br />PC2: -0.887561185<br />The Little People Work , John Williams;London Symphony Orchestra\",\"PC1:  4.45084003<br />PC2:  0.578171069<br />Rescue of the Princess , John Williams;London Symphony Orchestra\",\"PC1:  6.44219702<br />PC2:  0.610928343<br />Inner City , John Williams;London Symphony Orchestra\",\"PC1:  0.73493427<br />PC2: -2.727287057<br />Cantina Band , John Williams;London Symphony Orchestra\",\"PC1:  4.85002014<br />PC2:  0.377412110<br />The Land of the Sand People , John Williams;London Symphony Orchestra\",\"PC1:  4.95035762<br />PC2:  0.352848546<br />Mouse Robot and Blasting Off , John Williams;London Symphony Orchestra\",\"PC1:  5.81987752<br />PC2:  0.482851185<br />The Return Home , John Williams;London Symphony Orchestra\",\"PC1:  6.51061813<br />PC2:  0.405733081<br />The Walls Converge , John Williams;London Symphony Orchestra\",\"PC1:  8.29467903<br />PC2:  1.508259367<br />The Princess Appears , John Williams;London Symphony Orchestra\",\"PC1:  5.60897184<br />PC2:  0.644622554<br />The Last Battle , John Williams;London Symphony Orchestra\",\"PC1:  4.79022779<br />PC2: -0.681317411<br />The Throne Room and End Title , John Williams;London Symphony Orchestra\",\"PC1:  6.31742427<br />PC2:  1.457637334<br />Dvořák: Symphony No. 9 in E Minor, Op. 95, B. 178 \\\"From the New World\\\": I. Adagio - Allegro molto , Antonín Dvořák;José Serebrier;Bournemouth Symphony Orchestra\",\"PC1:  7.94506148<br />PC2:  0.503304680<br />Dvořák: Symphony No. 9 in E Minor, Op. 95, B. 178 \\\"From the New World\\\": II. Largo , Antonín Dvořák;José Serebrier;Bournemouth Symphony Orchestra\",\"PC1:  5.94367567<br />PC2:  1.328827808<br />Dvořák: Symphony No. 9 in E Minor, Op. 95, B. 178 \\\"From the New World\\\": III. Molto vivace , Antonín Dvořák;José Serebrier;Bournemouth Symphony Orchestra\",\"PC1:  5.96105613<br />PC2:  1.279530581<br />Dvořák: Symphony No. 9 in E Minor, Op. 95, B. 178 \\\"From the New World\\\": IV. Allegro con fuoco , Antonín Dvořák;José Serebrier;Bournemouth Symphony Orchestra\",\"PC1: -2.03781804<br />PC2: -0.021016810<br />American Idiot , Green Day\",\"PC1: -0.43964264<br />PC2:  0.361131345<br />Jesus of Suburbia , Green Day\",\"PC1: -0.35411836<br />PC2:  0.704214656<br />Holiday / Boulevard of Broken Dreams , Green Day\",\"PC1: -0.38504024<br />PC2:  0.852665586<br />Are We the Waiting / St. Jimmy , Green Day\",\"PC1: -0.98630772<br />PC2:  0.354455881<br />Give Me Novacaine / She's a Rebel , Green Day\",\"PC1: -0.36230803<br />PC2:  0.733393343<br />Extraordinary Girl / Letterbomb , Green Day\",\"PC1: -0.15770883<br />PC2:  0.016480454<br />Wake Me up When September Ends , Green Day\",\"PC1: -0.24957618<br />PC2:  0.968588758<br />Homecoming , Green Day\",\"PC1: -0.81236870<br />PC2: -1.994425829<br />Whatsername , Green Day\",\"PC1: -1.70078142<br />PC2:  0.787960673<br />Too Much Too Soon , Green Day\",\"PC1: -2.17953693<br />PC2:  1.005149432<br />Shoplifter , Green Day\",\"PC1: -2.00763779<br />PC2: -0.490259326<br />Governator , Green Day\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1:          NA<br />PC2:           NA<br />NA , NA\",\"PC1: -2.30751017<br />PC2:  0.238922855<br />Enemy (with JID) - from the series Arcane League of Legends , Imagine Dragons;JID;Arcane;League of Legends\",\"PC1: -0.97700295<br />PC2:  0.749802224<br />Burn It All Down , League of Legends;PVRIS\",\"PC1: -1.31050532<br />PC2:  0.726483667<br />Run Boy Run , Woodkid\",\"PC1: -1.20684473<br />PC2:  0.539479720<br />Monster , PVRIS\",\"PC1: -0.68792727<br />PC2:  0.217607054<br />Playground (from the series Arcane League of Legends) , Bea Miller\",\"PC1:  1.75890960<br />PC2:  0.967414657<br />Goodbye (from the series Arcane League of Legends) , Ramsey\",\"PC1: -0.78444560<br />PC2: -0.596226395<br />Our Love (from the series Arcane League of Legends) , Jazmine Sullivan;Curtis Harding\",\"PC1: -1.16606127<br />PC2: -1.676094209<br />Roxanne , The Police\",\"PC1:  2.32429267<br />PC2: -1.791011374<br />Life on Mars? - 2015 Remaster , David Bowie\",\"PC1: -0.43646504<br />PC2:  0.068867775<br />(Don't Fear) The Reaper - Single Version , Blue Öyster Cult\",\"PC1: -0.03378750<br />PC2: -2.698179860<br />Take The Money And Run , Steve Miller Band\",\"PC1:  0.24145452<br />PC2: -2.346697867<br />Fox On The Run , Sweet\",\"PC1:  2.67429461<br />PC2: -1.783538021<br />Rocky Mountain Way , Joe Walsh\",\"PC1:  0.35092639<br />PC2: -2.512035181<br />Hotel California - 2013 Remaster , Eagles\",\"PC1: -1.03311209<br />PC2: -1.511009948<br />Carry on Wayward Son , Kansas\",\"PC1:  1.13177418<br />PC2: -1.760951477<br />The Joker , Steve Miller Band\",\"PC1:  0.68775743<br />PC2: -1.704880658<br />Whatever You Want , Status Quo\",\"PC1: -0.56724360<br />PC2: -0.849690184<br />D'yer Mak'er - Remaster , Led Zeppelin\",\"PC1:  1.53706979<br />PC2: -2.147518869<br />Let It Be - Remastered 2009 , The Beatles\",\"PC1: -2.01553483<br />PC2: -0.535949077<br />Don't Stop Me Now - Remastered 2011 , Queen\",\"PC1:  0.58742163<br />PC2: -1.907259964<br />Who Are You , The Who\",\"PC1: -0.08999685<br />PC2: -0.864092667<br />Paranoid , Black Sabbath\",\"PC1:  1.41985549<br />PC2: -1.477696188<br />Mr. Blue Sky , Electric Light Orchestra\",\"PC1:  1.00204204<br />PC2: -2.748300251<br />A Horse with No Name , America;George Martin\",\"PC1: -0.52644614<br />PC2: -1.101240050<br />Teenage Kicks , The Undertones\",\"PC1: -1.20056064<br />PC2: -1.645813926<br />Message In A Bottle , The Police\",\"PC1: -0.04665875<br />PC2: -1.844227251<br />My Sweet Lord - Remastered 2014 , George Harrison\",\"PC1: -0.42993996<br />PC2: -2.071521613<br />Mississippi Queen , Mountain\",\"PC1:  0.37871631<br />PC2: -2.739310341<br />Smoke On The Water - Remastered 2012 , Deep Purple\",\"PC1: -0.84110480<br />PC2: -1.886218099<br />American Woman - 7\\\" Single Version , The Guess Who\",\"PC1:  0.95745022<br />PC2: -0.604339845<br />Blown , Bachman-Turner Overdrive\",\"PC1:  1.37595704<br />PC2: -0.824373259<br />Welcome Home , Bachman-Turner Overdrive\",\"PC1:  1.15473284<br />PC2: -0.684062985<br />Stonegates , Bachman-Turner Overdrive\",\"PC1: -0.61071952<br />PC2: -1.901896424<br />Let It Ride , Bachman-Turner Overdrive\",\"PC1:  0.44528269<br />PC2: -1.695258620<br />Give It Time , Bachman-Turner Overdrive\",\"PC1: -0.26976627<br />PC2: -1.161148394<br />Tramp , Bachman-Turner Overdrive\",\"PC1:  1.44638662<br />PC2: -2.367737543<br />I Don't Have To Hide , Bachman-Turner Overdrive\",\"PC1: -0.34857297<br />PC2: -3.134992427<br />Takin' Care Of Business , Bachman-Turner Overdrive\",\"PC1:  0.62028248<br />PC2: -3.089104025<br />Another Brick in the Wall, Pt. 2 , Pink Floyd\",\"PC1:  0.05486333<br />PC2: -2.106717673<br />The Jean Genie - 2013 Remaster , David Bowie\",\"PC1:  1.13650673<br />PC2: -1.024008225<br />(Ghost) Riders in the Sky , Johnny Cash\",\"PC1: -0.36343858<br />PC2: -2.661012981<br />My Sharona , The Knack\",\"PC1:  1.45206441<br />PC2: -1.261119336<br />Bohemian Rhapsody - Remastered 2011 , Queen\",\"PC1:  0.12283033<br />PC2: -0.665973255<br />Wheel in the Sky , Journey\",\"PC1:  1.77490705<br />PC2: -2.276687008<br />Life's Been Good , Joe Walsh\",\"PC1: -0.79902372<br />PC2: -1.860629923<br />The Changeling , The Doors\",\"PC1: -0.75803555<br />PC2: -2.192610906<br />Love Her Madly , The Doors\",\"PC1:  0.47893595<br />PC2: -2.912847665<br />Been down so Long , The Doors\",\"PC1:  3.11811773<br />PC2: -2.838442911<br />Cars Hiss by My Window , The Doors\",\"PC1:  0.51390515<br />PC2: -1.610744921<br />L.A. Woman , The Doors\",\"PC1:  1.52561043<br />PC2: -0.868401172<br />L'America , The Doors\",\"PC1:  0.07205053<br />PC2: -1.743488265<br />Hyacinth House , The Doors\",\"PC1:  0.35952069<br />PC2: -2.999145688<br />Crawling King Snake , The Doors\",\"PC1: -0.39443979<br />PC2: -2.747876670<br />The WASP (Texas Radio and the Big Beat) , The Doors\",\"PC1:  0.42928131<br />PC2: -1.982602069<br />Riders on the Storm , The Doors\",\"PC1: -1.21390114<br />PC2: -1.828127880<br />Long Train Runnin' , The Doobie Brothers\",\"PC1:  1.26135973<br />PC2: -1.475518506<br />Walking On The Moon , The Police\",\"PC1:  0.18717899<br />PC2: -1.866825721<br />Feel like Makin' Love - 2015 Remaster , Bad Company\",\"PC1:  0.93745464<br />PC2: -2.749951715<br />New Kid in Town - 2013 Remaster , Eagles\",\"PC1: -1.40640502<br />PC2: -2.035305629<br />Go Your Own Way - 2004 Remaster , Fleetwood Mac\",\"PC1:  0.89439566<br />PC2: -1.387779782<br />Rockin' All Over The World , Status Quo\",\"PC1: -0.50645497<br />PC2: -1.710021470<br />Stay with Me , Faces\",\"PC1: -1.05518463<br />PC2:  0.056595679<br />Never Going Back , The Score\",\"PC1: -1.06910426<br />PC2:  0.079400764<br />New Kings , Sleeping Wolf\",\"PC1: -1.82399746<br />PC2:  0.377215702<br />Hourglass , Set It Off\",\"PC1: -1.21792700<br />PC2:  0.197255711<br />City of Dreams , Miracle Of Sound\",\"PC1: -1.33482334<br />PC2:  0.256176506<br />Gladiator , Zayde Wølf\",\"PC1:  1.08124374<br />PC2:  1.843092022<br />Victory Song , Ensiferum\",\"PC1: -1.05947607<br />PC2:  1.764983761<br />Gráinne Mhaol, Queen of Pirates , Miracle Of Sound\",\"PC1: -0.20858331<br />PC2: -1.745340326<br />Pinball Wizard , The Who\",\"PC1:  0.13646944<br />PC2: -1.784066511<br />My Generation - Stereo Version , The Who\",\"PC1:  2.66401195<br />PC2: -1.297163596<br />Spanish Train , Chris de Burgh\",\"PC1:  0.96201621<br />PC2: -1.585613097<br />Locomotive Breath , Jethro Tull\",\"PC1: -1.06725101<br />PC2: -2.490929477<br />Mamma Mia , ABBA\",\"PC1: -0.15709347<br />PC2: -2.430277827<br />Gimme! Gimme! Gimme! (A Man After Midnight) , ABBA\",\"PC1: -0.58674799<br />PC2: -0.304062142<br />Mülheim Ruhr , Sondaschule\",\"PC1: -1.25971287<br />PC2: -0.922512784<br />Wellerman , The Wellermen\",\"PC1:  0.35178450<br />PC2: -1.307127632<br />Leave Her Johnny , Sean Dagher;Nils Brown;Michiel Schrey\",\"PC1:  0.46592122<br />PC2: -0.704829547<br />Drunken Sailor , The Longest Johns\",\"PC1: -1.76410971<br />PC2:  0.532863222<br />Rose Tattoo , Dropkick Murphys\",\"PC1: -1.77513467<br />PC2: -0.646505880<br />Stressed Out , Twenty One Pilots\",\"PC1: -1.77513467<br />PC2: -0.646505880<br />Stressed Out , Twenty One Pilots\",\"PC1: -1.08289193<br />PC2: -1.231310397<br />Ride , Twenty One Pilots\",\"PC1: -1.08289193<br />PC2: -1.231310397<br />Ride , Twenty One Pilots\",\"PC1: -0.37507941<br />PC2: -1.338883632<br />Heathens , Twenty One Pilots\",\"PC1: -0.37507941<br />PC2: -1.338883632<br />Heathens , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -0.87919671<br />PC2:  0.276564436<br />The Hype , Twenty One Pilots\",\"PC1: -0.78628465<br />PC2: -1.673014229<br />Legend , Twenty One Pilots\",\"PC1:  0.06056444<br />PC2: -0.173484443<br />Bandito , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -0.56882069<br />PC2:  0.330917628<br />Chlorine , Twenty One Pilots\",\"PC1: -1.83247095<br />PC2: -1.079149570<br />Teenagers , My Chemical Romance\",\"PC1: -0.33313203<br />PC2:  0.567918104<br />Welcome to the Black Parade , My Chemical Romance\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,0,0,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":37.260273972602747},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-3.4058501932602745,8.8518470893972978],\"tickmode\":\"array\",\"ticktext\":[\"-3\",\"0\",\"3\",\"6\"],\"tickvals\":[-3,0,3,6],\"categoryorder\":\"array\",\"categoryarray\":[\"-3\",\"0\",\"3\",\"6\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"PC1\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-3.6805785072109387,4.3236995888141347],\"tickmode\":\"array\",\"ticktext\":[\"-2\",\"0\",\"2\",\"4\"],\"tickvals\":[-2,0,2,4],\"categoryorder\":\"array\",\"categoryarray\":[\"-2\",\"0\",\"2\",\"4\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"PC2\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"7bb177be3c5d\":{\"x\":{},\"y\":{},\"text\":{},\"type\":\"scatter\"}},\"cur_data\":\"7bb177be3c5d\",\"visdat\":{\"7bb177be3c5d\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nYou can now imagine, using this simpler representation of the\nsongs in principal component space, to for example\npropose new songs to users based on songs that are close to\nsongs they listened to in this representation.\n\nLastly, I want to stress, that the principal components are\nnot created equal. The first component is always the\nmost important.\nHere, we see, that almost 27% of the variance can be explained\njust by the first component, so exploring\nmore than 2 really makes little sense here.\n\n\n::: {.cell hash='06-distributions-summaries-and-dimensionality-reduction_cache/html/unnamed-chunk-48_5548f1d9e37329e88cf6ceec2aad7e86'}\n\n```{.r .cell-code}\ntidy(songs_prep)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 6\n  number operation type      trained skip  id             \n   <int> <chr>     <chr>     <lgl>   <lgl> <chr>          \n1      1 step      naomit    TRUE    TRUE  naomit_nB6On   \n2      2 step      normalize TRUE    FALSE normalize_n2kdf\n3      3 step      pca       TRUE    FALSE pca            \n```\n:::\n\n```{.r .cell-code}\ntibble(\n  sdev = songs_prep$steps[[3]]$res$sdev,\n  explained_variance = sdev^2 / sum(sdev^2),\n  pc = 1:length(sdev)\n) %>% \n  ggplot(aes(pc, explained_variance)) +\n  geom_col(fill = \"darkgreen\") +\n  geom_text(aes(label = scales::percent_format()(explained_variance)),\n            size = 3,\n            vjust = 1.1,\n            color = \"white\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  labs(x = NULL, y = \"Percent variance explained by each PCA component\")\n```\n\n::: {.cell-output-display}\n![](06-distributions-summaries-and-dimensionality-reduction_files/figure-html/unnamed-chunk-48-1.png){width=100%}\n:::\n:::\n\n\n\n\n\n## Exercises\n\nThe **tidytuesday** project also had a spotify\ndataset. This one es even more interesting,\nbecause it ranges across different playlists\nof various genres and is annotated with said genres.\nAnd it has more data (Over 30000 songs)!\n**Download** it here:\n\n<https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-01-21/readme.md>\n\n### The Plotty Horror Picture Show\n\nSometimes we have to experience true horror\nto see the light in the darkness. Take the spotify data\nand make a plot that is truly horrible!\nI would appreciate a couple of sentences about your thought process\nand what makes your plot particularly bad.\nYou can strike terror into the reader's heart in multiple\nways. Here are some ideas, mix and match what suits you:\n\n- Make it really ugly by experimenting with different theme options.\n- Make it really misleading by defying viewer expectations\n  and breaking all norms. You are an artist now,\n  norms don't apply to your art.\n- What even are axis labels?\n- Experiment with different (manual) color schemes!\n  Using **Red** and **Green** is an excellent choice if\n  you want to make sure your plot is unreadable for every 12th man\n  (due to the high prevalence of red-green-blindness).\n- Try out different geoms and combinations of aesthetics,\n  maybe find the ones that are the worst possible choice\n  for the features.\n  \n### Take a Sad Plot and Make it Better\n\nThe title of this exercise is stolen from\n[this talk](https://alison.rbind.io/talk/2018-ohsu-sad-plot-better/)\nby Alison Hill.\n\nNow use what you learned to make a great plot!\nPick some features that you are interested in\nand visualize them as informative and beautiful\nas possible, while still staying honest to the data.\nMaybe you are interested in changes over time,\nmaybe you find your favorite artist and want to situate\nthem in the context of other works.\nMaybe you want to explore how different features relate\nto each other or even want to attempt to\nrecreate the PCA to see, if you can find clusters\nof genres. It is your call.\n\nI am curious to see, what you come up with!\n\n## Resources\n\n- [Tidymodels website](https://www.tidymodels.org/)\n- [Tidymodels book](https://www.tmwr.org/)\n- [ggplot book](https://ggplot2-book.org/)\n- [ragg graphics device](https://ragg.r-lib.org/)\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.10.2/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}